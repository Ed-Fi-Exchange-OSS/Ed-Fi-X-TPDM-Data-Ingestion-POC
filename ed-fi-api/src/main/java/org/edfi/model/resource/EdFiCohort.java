/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.edfi.model.resource.EdFiCohortProgram;
import org.edfi.model.resource.EdFiEducationOrganizationReference;


/**
 * EdFiCohort
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiCohort   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("cohortIdentifier")
  private String cohortIdentifier = null;

  @SerializedName("educationOrganizationReference")
  private EdFiEducationOrganizationReference educationOrganizationReference = null;

  @SerializedName("academicSubjectDescriptor")
  private String academicSubjectDescriptor = null;

  @SerializedName("cohortDescription")
  private String cohortDescription = null;

  @SerializedName("cohortScopeDescriptor")
  private String cohortScopeDescriptor = null;

  @SerializedName("cohortTypeDescriptor")
  private String cohortTypeDescriptor = null;

  @SerializedName("programs")
  private List<EdFiCohortProgram> programs = new ArrayList<EdFiCohortProgram>();

  @SerializedName("_etag")
  private String etag = null;

  public EdFiCohort id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiCohort cohortIdentifier(String cohortIdentifier) {
    this.cohortIdentifier = cohortIdentifier;
    return this;
  }

   /**
   * The name or ID for the Cohort.
   * @return cohortIdentifier
  **/
  @ApiModelProperty(example = "null", required = true, value = "The name or ID for the Cohort.")
  public String getCohortIdentifier() {
    return cohortIdentifier;
  }

  public void setCohortIdentifier(String cohortIdentifier) {
    this.cohortIdentifier = cohortIdentifier;
  }

  public EdFiCohort educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }

  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }

  public EdFiCohort academicSubjectDescriptor(String academicSubjectDescriptor) {
    this.academicSubjectDescriptor = academicSubjectDescriptor;
    return this;
  }

   /**
   * The academic subject associated with an academic intervention.
   * @return academicSubjectDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The academic subject associated with an academic intervention.")
  public String getAcademicSubjectDescriptor() {
    return academicSubjectDescriptor;
  }

  public void setAcademicSubjectDescriptor(String academicSubjectDescriptor) {
    this.academicSubjectDescriptor = academicSubjectDescriptor;
  }

  public EdFiCohort cohortDescription(String cohortDescription) {
    this.cohortDescription = cohortDescription;
    return this;
  }

   /**
   * The description of the Cohort and its purpose.
   * @return cohortDescription
  **/
  @ApiModelProperty(example = "null", value = "The description of the Cohort and its purpose.")
  public String getCohortDescription() {
    return cohortDescription;
  }

  public void setCohortDescription(String cohortDescription) {
    this.cohortDescription = cohortDescription;
  }

  public EdFiCohort cohortScopeDescriptor(String cohortScopeDescriptor) {
    this.cohortScopeDescriptor = cohortScopeDescriptor;
    return this;
  }

   /**
   * The scope of cohort (e.g., school, district, classroom).
   * @return cohortScopeDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The scope of cohort (e.g., school, district, classroom).")
  public String getCohortScopeDescriptor() {
    return cohortScopeDescriptor;
  }

  public void setCohortScopeDescriptor(String cohortScopeDescriptor) {
    this.cohortScopeDescriptor = cohortScopeDescriptor;
  }

  public EdFiCohort cohortTypeDescriptor(String cohortTypeDescriptor) {
    this.cohortTypeDescriptor = cohortTypeDescriptor;
    return this;
  }

   /**
   * The type of cohort (e.g., academic intervention, classroom breakout).
   * @return cohortTypeDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The type of cohort (e.g., academic intervention, classroom breakout).")
  public String getCohortTypeDescriptor() {
    return cohortTypeDescriptor;
  }

  public void setCohortTypeDescriptor(String cohortTypeDescriptor) {
    this.cohortTypeDescriptor = cohortTypeDescriptor;
  }

  public EdFiCohort programs(List<EdFiCohortProgram> programs) {
    this.programs = programs;
    return this;
  }

  public EdFiCohort addProgramsItem(EdFiCohortProgram programsItem) {
    this.programs.add(programsItem);
    return this;
  }

   /**
   * An unordered collection of cohortPrograms. The (optional) program associated with this Cohort (e.g., special education).
   * @return programs
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of cohortPrograms. The (optional) program associated with this Cohort (e.g., special education).")
  public List<EdFiCohortProgram> getPrograms() {
    return programs;
  }

  public void setPrograms(List<EdFiCohortProgram> programs) {
    this.programs = programs;
  }

  public EdFiCohort etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiCohort edFiCohort = (EdFiCohort) o;
    return Objects.equals(this.id, edFiCohort.id) &&
        Objects.equals(this.cohortIdentifier, edFiCohort.cohortIdentifier) &&
        Objects.equals(this.educationOrganizationReference, edFiCohort.educationOrganizationReference) &&
        Objects.equals(this.academicSubjectDescriptor, edFiCohort.academicSubjectDescriptor) &&
        Objects.equals(this.cohortDescription, edFiCohort.cohortDescription) &&
        Objects.equals(this.cohortScopeDescriptor, edFiCohort.cohortScopeDescriptor) &&
        Objects.equals(this.cohortTypeDescriptor, edFiCohort.cohortTypeDescriptor) &&
        Objects.equals(this.programs, edFiCohort.programs) &&
        Objects.equals(this.etag, edFiCohort.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, cohortIdentifier, educationOrganizationReference, academicSubjectDescriptor, cohortDescription, cohortScopeDescriptor, cohortTypeDescriptor, programs, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiCohort {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cohortIdentifier: ").append(toIndentedString(cohortIdentifier)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    academicSubjectDescriptor: ").append(toIndentedString(academicSubjectDescriptor)).append("\n");
    sb.append("    cohortDescription: ").append(toIndentedString(cohortDescription)).append("\n");
    sb.append("    cohortScopeDescriptor: ").append(toIndentedString(cohortScopeDescriptor)).append("\n");
    sb.append("    cohortTypeDescriptor: ").append(toIndentedString(cohortTypeDescriptor)).append("\n");
    sb.append("    programs: ").append(toIndentedString(programs)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

