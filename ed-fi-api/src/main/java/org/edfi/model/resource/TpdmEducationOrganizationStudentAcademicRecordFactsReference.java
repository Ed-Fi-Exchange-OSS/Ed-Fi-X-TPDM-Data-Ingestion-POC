/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.edfi.model.resource.Link;
import org.joda.time.LocalDate;


/**
 * TpdmEducationOrganizationStudentAcademicRecordFactsReference
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class TpdmEducationOrganizationStudentAcademicRecordFactsReference   {
  @SerializedName("educationOrganizationId")
  private Integer educationOrganizationId = null;

  @SerializedName("factAsOfDate")
  private LocalDate factAsOfDate = null;

  @SerializedName("schoolYear")
  private Integer schoolYear = null;

  @SerializedName("termDescriptor")
  private String termDescriptor = null;

  @SerializedName("link")
  private Link link = null;

  public TpdmEducationOrganizationStudentAcademicRecordFactsReference educationOrganizationId(Integer educationOrganizationId) {
    this.educationOrganizationId = educationOrganizationId;
    return this;
  }

   /**
   * The identifier assigned to an education organization.
   * @return educationOrganizationId
  **/
  @ApiModelProperty(example = "null", required = true, value = "The identifier assigned to an education organization.")
  public Integer getEducationOrganizationId() {
    return educationOrganizationId;
  }

  public void setEducationOrganizationId(Integer educationOrganizationId) {
    this.educationOrganizationId = educationOrganizationId;
  }

  public TpdmEducationOrganizationStudentAcademicRecordFactsReference factAsOfDate(LocalDate factAsOfDate) {
    this.factAsOfDate = factAsOfDate;
    return this;
  }

   /**
   * The date for which the data element is relevant
   * @return factAsOfDate
  **/
  @ApiModelProperty(example = "null", required = true, value = "The date for which the data element is relevant")
  public LocalDate getFactAsOfDate() {
    return factAsOfDate;
  }

  public void setFactAsOfDate(LocalDate factAsOfDate) {
    this.factAsOfDate = factAsOfDate;
  }

  public TpdmEducationOrganizationStudentAcademicRecordFactsReference schoolYear(Integer schoolYear) {
    this.schoolYear = schoolYear;
    return this;
  }

   /**
   * The school year for which the data is associated
   * @return schoolYear
  **/
  @ApiModelProperty(example = "null", required = true, value = "The school year for which the data is associated")
  public Integer getSchoolYear() {
    return schoolYear;
  }

  public void setSchoolYear(Integer schoolYear) {
    this.schoolYear = schoolYear;
  }

  public TpdmEducationOrganizationStudentAcademicRecordFactsReference termDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
    return this;
  }

   /**
   * The term for the session during the school year.
   * @return termDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The term for the session during the school year.")
  public String getTermDescriptor() {
    return termDescriptor;
  }

  public void setTermDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
  }

  public TpdmEducationOrganizationStudentAcademicRecordFactsReference link(Link link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @ApiModelProperty(example = "null", value = "")
  public Link getLink() {
    return link;
  }

  public void setLink(Link link) {
    this.link = link;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmEducationOrganizationStudentAcademicRecordFactsReference tpdmEducationOrganizationStudentAcademicRecordFactsReference = (TpdmEducationOrganizationStudentAcademicRecordFactsReference) o;
    return Objects.equals(this.educationOrganizationId, tpdmEducationOrganizationStudentAcademicRecordFactsReference.educationOrganizationId) &&
        Objects.equals(this.factAsOfDate, tpdmEducationOrganizationStudentAcademicRecordFactsReference.factAsOfDate) &&
        Objects.equals(this.schoolYear, tpdmEducationOrganizationStudentAcademicRecordFactsReference.schoolYear) &&
        Objects.equals(this.termDescriptor, tpdmEducationOrganizationStudentAcademicRecordFactsReference.termDescriptor) &&
        Objects.equals(this.link, tpdmEducationOrganizationStudentAcademicRecordFactsReference.link);
  }

  @Override
  public int hashCode() {
    return Objects.hash(educationOrganizationId, factAsOfDate, schoolYear, termDescriptor, link);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmEducationOrganizationStudentAcademicRecordFactsReference {\n");
    
    sb.append("    educationOrganizationId: ").append(toIndentedString(educationOrganizationId)).append("\n");
    sb.append("    factAsOfDate: ").append(toIndentedString(factAsOfDate)).append("\n");
    sb.append("    schoolYear: ").append(toIndentedString(schoolYear)).append("\n");
    sb.append("    termDescriptor: ").append(toIndentedString(termDescriptor)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

