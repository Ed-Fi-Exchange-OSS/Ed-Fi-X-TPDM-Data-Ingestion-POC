/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * TpdmProspectQualifications
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class TpdmProspectQualifications   {
  @SerializedName("capacityToServe")
  private Boolean capacityToServe = null;

  @SerializedName("eligible")
  private Boolean eligible = null;

  @SerializedName("yearsOfServiceCurrentPlacement")
  private Double yearsOfServiceCurrentPlacement = null;

  @SerializedName("yearsOfServiceTotal")
  private Double yearsOfServiceTotal = null;

  public TpdmProspectQualifications capacityToServe(Boolean capacityToServe) {
    this.capacityToServe = capacityToServe;
    return this;
  }

   /**
   * An indication of whether or not a prospect mentor teacher has capacity to serve.
   * @return capacityToServe
  **/
  @ApiModelProperty(example = "null", value = "An indication of whether or not a prospect mentor teacher has capacity to serve.")
  public Boolean getCapacityToServe() {
    return capacityToServe;
  }

  public void setCapacityToServe(Boolean capacityToServe) {
    this.capacityToServe = capacityToServe;
  }

  public TpdmProspectQualifications eligible(Boolean eligible) {
    this.eligible = eligible;
    return this;
  }

   /**
   * An indication of whether the prospect is eligible for the position.
   * @return eligible
  **/
  @ApiModelProperty(example = "null", required = true, value = "An indication of whether the prospect is eligible for the position.")
  public Boolean getEligible() {
    return eligible;
  }

  public void setEligible(Boolean eligible) {
    this.eligible = eligible;
  }

  public TpdmProspectQualifications yearsOfServiceCurrentPlacement(Double yearsOfServiceCurrentPlacement) {
    this.yearsOfServiceCurrentPlacement = yearsOfServiceCurrentPlacement;
    return this;
  }

   /**
   * The total number of years of service at the current school.
   * @return yearsOfServiceCurrentPlacement
  **/
  @ApiModelProperty(example = "null", value = "The total number of years of service at the current school.")
  public Double getYearsOfServiceCurrentPlacement() {
    return yearsOfServiceCurrentPlacement;
  }

  public void setYearsOfServiceCurrentPlacement(Double yearsOfServiceCurrentPlacement) {
    this.yearsOfServiceCurrentPlacement = yearsOfServiceCurrentPlacement;
  }

  public TpdmProspectQualifications yearsOfServiceTotal(Double yearsOfServiceTotal) {
    this.yearsOfServiceTotal = yearsOfServiceTotal;
    return this;
  }

   /**
   * The total number of years of service as a teacher.
   * @return yearsOfServiceTotal
  **/
  @ApiModelProperty(example = "null", required = true, value = "The total number of years of service as a teacher.")
  public Double getYearsOfServiceTotal() {
    return yearsOfServiceTotal;
  }

  public void setYearsOfServiceTotal(Double yearsOfServiceTotal) {
    this.yearsOfServiceTotal = yearsOfServiceTotal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmProspectQualifications tpdmProspectQualifications = (TpdmProspectQualifications) o;
    return Objects.equals(this.capacityToServe, tpdmProspectQualifications.capacityToServe) &&
        Objects.equals(this.eligible, tpdmProspectQualifications.eligible) &&
        Objects.equals(this.yearsOfServiceCurrentPlacement, tpdmProspectQualifications.yearsOfServiceCurrentPlacement) &&
        Objects.equals(this.yearsOfServiceTotal, tpdmProspectQualifications.yearsOfServiceTotal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacityToServe, eligible, yearsOfServiceCurrentPlacement, yearsOfServiceTotal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmProspectQualifications {\n");
    
    sb.append("    capacityToServe: ").append(toIndentedString(capacityToServe)).append("\n");
    sb.append("    eligible: ").append(toIndentedString(eligible)).append("\n");
    sb.append("    yearsOfServiceCurrentPlacement: ").append(toIndentedString(yearsOfServiceCurrentPlacement)).append("\n");
    sb.append("    yearsOfServiceTotal: ").append(toIndentedString(yearsOfServiceTotal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

