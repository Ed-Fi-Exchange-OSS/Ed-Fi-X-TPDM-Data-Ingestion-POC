/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.edfi.model.resource.EdFiStaffAddress;
import org.edfi.model.resource.EdFiStaffCredential;
import org.edfi.model.resource.EdFiStaffElectronicMail;
import org.edfi.model.resource.EdFiStaffIdentificationCode;
import org.edfi.model.resource.EdFiStaffIdentificationDocument;
import org.edfi.model.resource.EdFiStaffInternationalAddress;
import org.edfi.model.resource.EdFiStaffLanguage;
import org.edfi.model.resource.EdFiStaffOtherName;
import org.edfi.model.resource.EdFiStaffPersonalIdentificationDocument;
import org.edfi.model.resource.EdFiStaffRace;
import org.edfi.model.resource.EdFiStaffRecognition;
import org.edfi.model.resource.EdFiStaffTelephone;
import org.edfi.model.resource.EdFiStaffTribalAffiliation;
import org.edfi.model.resource.EdFiStaffVisa;
import org.edfi.model.resource.StaffExtensions;
import org.joda.time.LocalDate;


/**
 * EdFiStaff
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiStaff   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("staffUniqueId")
  private String staffUniqueId = null;

  @SerializedName("addresses")
  private List<EdFiStaffAddress> addresses = new ArrayList<EdFiStaffAddress>();

  @SerializedName("birthDate")
  private LocalDate birthDate = null;

  @SerializedName("citizenshipStatusDescriptor")
  private String citizenshipStatusDescriptor = null;

  @SerializedName("credentials")
  private List<EdFiStaffCredential> credentials = new ArrayList<EdFiStaffCredential>();

  @SerializedName("electronicMails")
  private List<EdFiStaffElectronicMail> electronicMails = new ArrayList<EdFiStaffElectronicMail>();

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("generationCodeSuffix")
  private String generationCodeSuffix = null;

  @SerializedName("highestCompletedLevelOfEducationDescriptor")
  private String highestCompletedLevelOfEducationDescriptor = null;

  @SerializedName("highlyQualifiedTeacher")
  private Boolean highlyQualifiedTeacher = null;

  @SerializedName("hispanicLatinoEthnicity")
  private Boolean hispanicLatinoEthnicity = null;

  @SerializedName("identificationCodes")
  private List<EdFiStaffIdentificationCode> identificationCodes = new ArrayList<EdFiStaffIdentificationCode>();

  @SerializedName("identificationDocuments")
  private List<EdFiStaffIdentificationDocument> identificationDocuments = new ArrayList<EdFiStaffIdentificationDocument>();

  @SerializedName("internationalAddresses")
  private List<EdFiStaffInternationalAddress> internationalAddresses = new ArrayList<EdFiStaffInternationalAddress>();

  @SerializedName("languages")
  private List<EdFiStaffLanguage> languages = new ArrayList<EdFiStaffLanguage>();

  @SerializedName("lastSurname")
  private String lastSurname = null;

  @SerializedName("loginId")
  private String loginId = null;

  @SerializedName("maidenName")
  private String maidenName = null;

  @SerializedName("middleName")
  private String middleName = null;

  @SerializedName("oldEthnicityDescriptor")
  private String oldEthnicityDescriptor = null;

  @SerializedName("otherNames")
  private List<EdFiStaffOtherName> otherNames = new ArrayList<EdFiStaffOtherName>();

  @SerializedName("personalIdentificationDocuments")
  private List<EdFiStaffPersonalIdentificationDocument> personalIdentificationDocuments = new ArrayList<EdFiStaffPersonalIdentificationDocument>();

  @SerializedName("personalTitlePrefix")
  private String personalTitlePrefix = null;

  @SerializedName("races")
  private List<EdFiStaffRace> races = new ArrayList<EdFiStaffRace>();

  @SerializedName("recognitions")
  private List<EdFiStaffRecognition> recognitions = new ArrayList<EdFiStaffRecognition>();

  @SerializedName("sexDescriptor")
  private String sexDescriptor = null;

  @SerializedName("telephones")
  private List<EdFiStaffTelephone> telephones = new ArrayList<EdFiStaffTelephone>();

  @SerializedName("tribalAffiliations")
  private List<EdFiStaffTribalAffiliation> tribalAffiliations = new ArrayList<EdFiStaffTribalAffiliation>();

  @SerializedName("visas")
  private List<EdFiStaffVisa> visas = new ArrayList<EdFiStaffVisa>();

  @SerializedName("yearsOfPriorProfessionalExperience")
  private Double yearsOfPriorProfessionalExperience = null;

  @SerializedName("yearsOfPriorTeachingExperience")
  private Double yearsOfPriorTeachingExperience = null;

  @SerializedName("_etag")
  private String etag = null;

  @SerializedName("_ext")
  private StaffExtensions ext = null;

  public EdFiStaff id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiStaff staffUniqueId(String staffUniqueId) {
    this.staffUniqueId = staffUniqueId;
    return this;
  }

   /**
   * A unique alphanumeric code assigned to a staff.
   * @return staffUniqueId
  **/
  @ApiModelProperty(example = "null", required = true, value = "A unique alphanumeric code assigned to a staff.")
  public String getStaffUniqueId() {
    return staffUniqueId;
  }

  public void setStaffUniqueId(String staffUniqueId) {
    this.staffUniqueId = staffUniqueId;
  }

  public EdFiStaff addresses(List<EdFiStaffAddress> addresses) {
    this.addresses = addresses;
    return this;
  }

  public EdFiStaff addAddressesItem(EdFiStaffAddress addressesItem) {
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * An unordered collection of staffAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code.
   * @return addresses
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code.")
  public List<EdFiStaffAddress> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<EdFiStaffAddress> addresses) {
    this.addresses = addresses;
  }

  public EdFiStaff birthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * The month, day, and year on which an individual was born.
   * @return birthDate
  **/
  @ApiModelProperty(example = "null", value = "The month, day, and year on which an individual was born.")
  public LocalDate getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
  }

  public EdFiStaff citizenshipStatusDescriptor(String citizenshipStatusDescriptor) {
    this.citizenshipStatusDescriptor = citizenshipStatusDescriptor;
    return this;
  }

   /**
   * An indicator of whether or not the person is a U.S. citizen.
   * @return citizenshipStatusDescriptor
  **/
  @ApiModelProperty(example = "null", value = "An indicator of whether or not the person is a U.S. citizen.")
  public String getCitizenshipStatusDescriptor() {
    return citizenshipStatusDescriptor;
  }

  public void setCitizenshipStatusDescriptor(String citizenshipStatusDescriptor) {
    this.citizenshipStatusDescriptor = citizenshipStatusDescriptor;
  }

  public EdFiStaff credentials(List<EdFiStaffCredential> credentials) {
    this.credentials = credentials;
    return this;
  }

  public EdFiStaff addCredentialsItem(EdFiStaffCredential credentialsItem) {
    this.credentials.add(credentialsItem);
    return this;
  }

   /**
   * An unordered collection of staffCredentials. The legal document giving authorization to perform teaching assignment services.
   * @return credentials
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffCredentials. The legal document giving authorization to perform teaching assignment services.")
  public List<EdFiStaffCredential> getCredentials() {
    return credentials;
  }

  public void setCredentials(List<EdFiStaffCredential> credentials) {
    this.credentials = credentials;
  }

  public EdFiStaff electronicMails(List<EdFiStaffElectronicMail> electronicMails) {
    this.electronicMails = electronicMails;
    return this;
  }

  public EdFiStaff addElectronicMailsItem(EdFiStaffElectronicMail electronicMailsItem) {
    this.electronicMails.add(electronicMailsItem);
    return this;
  }

   /**
   * An unordered collection of staffElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.
   * @return electronicMails
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.")
  public List<EdFiStaffElectronicMail> getElectronicMails() {
    return electronicMails;
  }

  public void setElectronicMails(List<EdFiStaffElectronicMail> electronicMails) {
    this.electronicMails = electronicMails;
  }

  public EdFiStaff firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.
   * @return firstName
  **/
  @ApiModelProperty(example = "null", required = true, value = "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public EdFiStaff generationCodeSuffix(String generationCodeSuffix) {
    this.generationCodeSuffix = generationCodeSuffix;
    return this;
  }

   /**
   * An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).
   * @return generationCodeSuffix
  **/
  @ApiModelProperty(example = "null", value = "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).")
  public String getGenerationCodeSuffix() {
    return generationCodeSuffix;
  }

  public void setGenerationCodeSuffix(String generationCodeSuffix) {
    this.generationCodeSuffix = generationCodeSuffix;
  }

  public EdFiStaff highestCompletedLevelOfEducationDescriptor(String highestCompletedLevelOfEducationDescriptor) {
    this.highestCompletedLevelOfEducationDescriptor = highestCompletedLevelOfEducationDescriptor;
    return this;
  }

   /**
   * The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).
   * @return highestCompletedLevelOfEducationDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).")
  public String getHighestCompletedLevelOfEducationDescriptor() {
    return highestCompletedLevelOfEducationDescriptor;
  }

  public void setHighestCompletedLevelOfEducationDescriptor(String highestCompletedLevelOfEducationDescriptor) {
    this.highestCompletedLevelOfEducationDescriptor = highestCompletedLevelOfEducationDescriptor;
  }

  public EdFiStaff highlyQualifiedTeacher(Boolean highlyQualifiedTeacher) {
    this.highlyQualifiedTeacher = highlyQualifiedTeacher;
    return this;
  }

   /**
   * An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.
   * @return highlyQualifiedTeacher
  **/
  @ApiModelProperty(example = "null", value = "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.")
  public Boolean getHighlyQualifiedTeacher() {
    return highlyQualifiedTeacher;
  }

  public void setHighlyQualifiedTeacher(Boolean highlyQualifiedTeacher) {
    this.highlyQualifiedTeacher = highlyQualifiedTeacher;
  }

  public EdFiStaff hispanicLatinoEthnicity(Boolean hispanicLatinoEthnicity) {
    this.hispanicLatinoEthnicity = hispanicLatinoEthnicity;
    return this;
  }

   /**
   * An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"
   * @return hispanicLatinoEthnicity
  **/
  @ApiModelProperty(example = "null", value = "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"")
  public Boolean getHispanicLatinoEthnicity() {
    return hispanicLatinoEthnicity;
  }

  public void setHispanicLatinoEthnicity(Boolean hispanicLatinoEthnicity) {
    this.hispanicLatinoEthnicity = hispanicLatinoEthnicity;
  }

  public EdFiStaff identificationCodes(List<EdFiStaffIdentificationCode> identificationCodes) {
    this.identificationCodes = identificationCodes;
    return this;
  }

  public EdFiStaff addIdentificationCodesItem(EdFiStaffIdentificationCode identificationCodesItem) {
    this.identificationCodes.add(identificationCodesItem);
    return this;
  }

   /**
   * An unordered collection of staffIdentificationCodes. A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.
   * @return identificationCodes
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffIdentificationCodes. A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.")
  public List<EdFiStaffIdentificationCode> getIdentificationCodes() {
    return identificationCodes;
  }

  public void setIdentificationCodes(List<EdFiStaffIdentificationCode> identificationCodes) {
    this.identificationCodes = identificationCodes;
  }

  public EdFiStaff identificationDocuments(List<EdFiStaffIdentificationDocument> identificationDocuments) {
    this.identificationDocuments = identificationDocuments;
    return this;
  }

  public EdFiStaff addIdentificationDocumentsItem(EdFiStaffIdentificationDocument identificationDocumentsItem) {
    this.identificationDocuments.add(identificationDocumentsItem);
    return this;
  }

   /**
   * An unordered collection of staffIdentificationDocuments. Describe the documentation of citizenship.
   * @return identificationDocuments
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffIdentificationDocuments. Describe the documentation of citizenship.")
  public List<EdFiStaffIdentificationDocument> getIdentificationDocuments() {
    return identificationDocuments;
  }

  public void setIdentificationDocuments(List<EdFiStaffIdentificationDocument> identificationDocuments) {
    this.identificationDocuments = identificationDocuments;
  }

  public EdFiStaff internationalAddresses(List<EdFiStaffInternationalAddress> internationalAddresses) {
    this.internationalAddresses = internationalAddresses;
    return this;
  }

  public EdFiStaff addInternationalAddressesItem(EdFiStaffInternationalAddress internationalAddressesItem) {
    this.internationalAddresses.add(internationalAddressesItem);
    return this;
  }

   /**
   * An unordered collection of staffInternationalAddresses. The set of elements that describes an international address.
   * @return internationalAddresses
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffInternationalAddresses. The set of elements that describes an international address.")
  public List<EdFiStaffInternationalAddress> getInternationalAddresses() {
    return internationalAddresses;
  }

  public void setInternationalAddresses(List<EdFiStaffInternationalAddress> internationalAddresses) {
    this.internationalAddresses = internationalAddresses;
  }

  public EdFiStaff languages(List<EdFiStaffLanguage> languages) {
    this.languages = languages;
    return this;
  }

  public EdFiStaff addLanguagesItem(EdFiStaffLanguage languagesItem) {
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * An unordered collection of staffLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.
   * @return languages
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.")
  public List<EdFiStaffLanguage> getLanguages() {
    return languages;
  }

  public void setLanguages(List<EdFiStaffLanguage> languages) {
    this.languages = languages;
  }

  public EdFiStaff lastSurname(String lastSurname) {
    this.lastSurname = lastSurname;
    return this;
  }

   /**
   * The name borne in common by members of a family.
   * @return lastSurname
  **/
  @ApiModelProperty(example = "null", required = true, value = "The name borne in common by members of a family.")
  public String getLastSurname() {
    return lastSurname;
  }

  public void setLastSurname(String lastSurname) {
    this.lastSurname = lastSurname;
  }

  public EdFiStaff loginId(String loginId) {
    this.loginId = loginId;
    return this;
  }

   /**
   * The login ID for the user; used for security access control interface.
   * @return loginId
  **/
  @ApiModelProperty(example = "null", value = "The login ID for the user; used for security access control interface.")
  public String getLoginId() {
    return loginId;
  }

  public void setLoginId(String loginId) {
    this.loginId = loginId;
  }

  public EdFiStaff maidenName(String maidenName) {
    this.maidenName = maidenName;
    return this;
  }

   /**
   * The person's maiden name.
   * @return maidenName
  **/
  @ApiModelProperty(example = "null", value = "The person's maiden name.")
  public String getMaidenName() {
    return maidenName;
  }

  public void setMaidenName(String maidenName) {
    this.maidenName = maidenName;
  }

  public EdFiStaff middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * A secondary name given to an individual at birth, baptism, or during another naming ceremony.
   * @return middleName
  **/
  @ApiModelProperty(example = "null", value = "A secondary name given to an individual at birth, baptism, or during another naming ceremony.")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public EdFiStaff oldEthnicityDescriptor(String oldEthnicityDescriptor) {
    this.oldEthnicityDescriptor = oldEthnicityDescriptor;
    return this;
  }

   /**
   * Previous definition of Ethnicity combining Hispanic/Latino and race:          1 - American Indian or Alaskan Native          2 - Asian or Pacific Islander          3 - Black, not of Hispanic origin          4 - Hispanic          5 - White, not of Hispanic origin.
   * @return oldEthnicityDescriptor
  **/
  @ApiModelProperty(example = "null", value = "Previous definition of Ethnicity combining Hispanic/Latino and race:          1 - American Indian or Alaskan Native          2 - Asian or Pacific Islander          3 - Black, not of Hispanic origin          4 - Hispanic          5 - White, not of Hispanic origin.")
  public String getOldEthnicityDescriptor() {
    return oldEthnicityDescriptor;
  }

  public void setOldEthnicityDescriptor(String oldEthnicityDescriptor) {
    this.oldEthnicityDescriptor = oldEthnicityDescriptor;
  }

  public EdFiStaff otherNames(List<EdFiStaffOtherName> otherNames) {
    this.otherNames = otherNames;
    return this;
  }

  public EdFiStaff addOtherNamesItem(EdFiStaffOtherName otherNamesItem) {
    this.otherNames.add(otherNamesItem);
    return this;
  }

   /**
   * An unordered collection of staffOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person.
   * @return otherNames
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person.")
  public List<EdFiStaffOtherName> getOtherNames() {
    return otherNames;
  }

  public void setOtherNames(List<EdFiStaffOtherName> otherNames) {
    this.otherNames = otherNames;
  }

  public EdFiStaff personalIdentificationDocuments(List<EdFiStaffPersonalIdentificationDocument> personalIdentificationDocuments) {
    this.personalIdentificationDocuments = personalIdentificationDocuments;
    return this;
  }

  public EdFiStaff addPersonalIdentificationDocumentsItem(EdFiStaffPersonalIdentificationDocument personalIdentificationDocumentsItem) {
    this.personalIdentificationDocuments.add(personalIdentificationDocumentsItem);
    return this;
  }

   /**
   * An unordered collection of staffPersonalIdentificationDocuments. The documents presented as evident to verify one's personal identity; for example: drivers license, passport, birth certificate, etc.
   * @return personalIdentificationDocuments
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffPersonalIdentificationDocuments. The documents presented as evident to verify one's personal identity; for example: drivers license, passport, birth certificate, etc.")
  public List<EdFiStaffPersonalIdentificationDocument> getPersonalIdentificationDocuments() {
    return personalIdentificationDocuments;
  }

  public void setPersonalIdentificationDocuments(List<EdFiStaffPersonalIdentificationDocument> personalIdentificationDocuments) {
    this.personalIdentificationDocuments = personalIdentificationDocuments;
  }

  public EdFiStaff personalTitlePrefix(String personalTitlePrefix) {
    this.personalTitlePrefix = personalTitlePrefix;
    return this;
  }

   /**
   * A prefix used to denote the title, degree, position, or seniority of the person.
   * @return personalTitlePrefix
  **/
  @ApiModelProperty(example = "null", value = "A prefix used to denote the title, degree, position, or seniority of the person.")
  public String getPersonalTitlePrefix() {
    return personalTitlePrefix;
  }

  public void setPersonalTitlePrefix(String personalTitlePrefix) {
    this.personalTitlePrefix = personalTitlePrefix;
  }

  public EdFiStaff races(List<EdFiStaffRace> races) {
    this.races = races;
    return this;
  }

  public EdFiStaff addRacesItem(EdFiStaffRace racesItem) {
    this.races.add(racesItem);
    return this;
  }

   /**
   * An unordered collection of staffRaces. The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.
   * @return races
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffRaces. The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.")
  public List<EdFiStaffRace> getRaces() {
    return races;
  }

  public void setRaces(List<EdFiStaffRace> races) {
    this.races = races;
  }

  public EdFiStaff recognitions(List<EdFiStaffRecognition> recognitions) {
    this.recognitions = recognitions;
    return this;
  }

  public EdFiStaff addRecognitionsItem(EdFiStaffRecognition recognitionsItem) {
    this.recognitions.add(recognitionsItem);
    return this;
  }

   /**
   * An unordered collection of staffRecognitions. Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.
   * @return recognitions
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffRecognitions. Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.")
  public List<EdFiStaffRecognition> getRecognitions() {
    return recognitions;
  }

  public void setRecognitions(List<EdFiStaffRecognition> recognitions) {
    this.recognitions = recognitions;
  }

  public EdFiStaff sexDescriptor(String sexDescriptor) {
    this.sexDescriptor = sexDescriptor;
    return this;
  }

   /**
   * A person's gender.
   * @return sexDescriptor
  **/
  @ApiModelProperty(example = "null", value = "A person's gender.")
  public String getSexDescriptor() {
    return sexDescriptor;
  }

  public void setSexDescriptor(String sexDescriptor) {
    this.sexDescriptor = sexDescriptor;
  }

  public EdFiStaff telephones(List<EdFiStaffTelephone> telephones) {
    this.telephones = telephones;
    return this;
  }

  public EdFiStaff addTelephonesItem(EdFiStaffTelephone telephonesItem) {
    this.telephones.add(telephonesItem);
    return this;
  }

   /**
   * An unordered collection of staffTelephones. The 10-digit telephone number, including the area code, for the person.
   * @return telephones
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffTelephones. The 10-digit telephone number, including the area code, for the person.")
  public List<EdFiStaffTelephone> getTelephones() {
    return telephones;
  }

  public void setTelephones(List<EdFiStaffTelephone> telephones) {
    this.telephones = telephones;
  }

  public EdFiStaff tribalAffiliations(List<EdFiStaffTribalAffiliation> tribalAffiliations) {
    this.tribalAffiliations = tribalAffiliations;
    return this;
  }

  public EdFiStaff addTribalAffiliationsItem(EdFiStaffTribalAffiliation tribalAffiliationsItem) {
    this.tribalAffiliations.add(tribalAffiliationsItem);
    return this;
  }

   /**
   * An unordered collection of staffTribalAffiliations. An American Indian tribe with which the staff member is affiliated.
   * @return tribalAffiliations
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffTribalAffiliations. An American Indian tribe with which the staff member is affiliated.")
  public List<EdFiStaffTribalAffiliation> getTribalAffiliations() {
    return tribalAffiliations;
  }

  public void setTribalAffiliations(List<EdFiStaffTribalAffiliation> tribalAffiliations) {
    this.tribalAffiliations = tribalAffiliations;
  }

  public EdFiStaff visas(List<EdFiStaffVisa> visas) {
    this.visas = visas;
    return this;
  }

  public EdFiStaff addVisasItem(EdFiStaffVisa visasItem) {
    this.visas.add(visasItem);
    return this;
  }

   /**
   * An unordered collection of staffVisas. An indicator of a non-US citizen's Visa type.
   * @return visas
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of staffVisas. An indicator of a non-US citizen's Visa type.")
  public List<EdFiStaffVisa> getVisas() {
    return visas;
  }

  public void setVisas(List<EdFiStaffVisa> visas) {
    this.visas = visas;
  }

  public EdFiStaff yearsOfPriorProfessionalExperience(Double yearsOfPriorProfessionalExperience) {
    this.yearsOfPriorProfessionalExperience = yearsOfPriorProfessionalExperience;
    return this;
  }

   /**
   * The total number of years that an individual has previously held a similar professional position in one or more education institutions.
   * @return yearsOfPriorProfessionalExperience
  **/
  @ApiModelProperty(example = "null", value = "The total number of years that an individual has previously held a similar professional position in one or more education institutions.")
  public Double getYearsOfPriorProfessionalExperience() {
    return yearsOfPriorProfessionalExperience;
  }

  public void setYearsOfPriorProfessionalExperience(Double yearsOfPriorProfessionalExperience) {
    this.yearsOfPriorProfessionalExperience = yearsOfPriorProfessionalExperience;
  }

  public EdFiStaff yearsOfPriorTeachingExperience(Double yearsOfPriorTeachingExperience) {
    this.yearsOfPriorTeachingExperience = yearsOfPriorTeachingExperience;
    return this;
  }

   /**
   * The total number of years that an individual has previously held a teaching position in one or more education institutions.
   * @return yearsOfPriorTeachingExperience
  **/
  @ApiModelProperty(example = "null", value = "The total number of years that an individual has previously held a teaching position in one or more education institutions.")
  public Double getYearsOfPriorTeachingExperience() {
    return yearsOfPriorTeachingExperience;
  }

  public void setYearsOfPriorTeachingExperience(Double yearsOfPriorTeachingExperience) {
    this.yearsOfPriorTeachingExperience = yearsOfPriorTeachingExperience;
  }

  public EdFiStaff etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }

  public EdFiStaff ext(StaffExtensions ext) {
    this.ext = ext;
    return this;
  }

   /**
   * Get ext
   * @return ext
  **/
  @ApiModelProperty(example = "null", value = "")
  public StaffExtensions getExt() {
    return ext;
  }

  public void setExt(StaffExtensions ext) {
    this.ext = ext;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStaff edFiStaff = (EdFiStaff) o;
    return Objects.equals(this.id, edFiStaff.id) &&
        Objects.equals(this.staffUniqueId, edFiStaff.staffUniqueId) &&
        Objects.equals(this.addresses, edFiStaff.addresses) &&
        Objects.equals(this.birthDate, edFiStaff.birthDate) &&
        Objects.equals(this.citizenshipStatusDescriptor, edFiStaff.citizenshipStatusDescriptor) &&
        Objects.equals(this.credentials, edFiStaff.credentials) &&
        Objects.equals(this.electronicMails, edFiStaff.electronicMails) &&
        Objects.equals(this.firstName, edFiStaff.firstName) &&
        Objects.equals(this.generationCodeSuffix, edFiStaff.generationCodeSuffix) &&
        Objects.equals(this.highestCompletedLevelOfEducationDescriptor, edFiStaff.highestCompletedLevelOfEducationDescriptor) &&
        Objects.equals(this.highlyQualifiedTeacher, edFiStaff.highlyQualifiedTeacher) &&
        Objects.equals(this.hispanicLatinoEthnicity, edFiStaff.hispanicLatinoEthnicity) &&
        Objects.equals(this.identificationCodes, edFiStaff.identificationCodes) &&
        Objects.equals(this.identificationDocuments, edFiStaff.identificationDocuments) &&
        Objects.equals(this.internationalAddresses, edFiStaff.internationalAddresses) &&
        Objects.equals(this.languages, edFiStaff.languages) &&
        Objects.equals(this.lastSurname, edFiStaff.lastSurname) &&
        Objects.equals(this.loginId, edFiStaff.loginId) &&
        Objects.equals(this.maidenName, edFiStaff.maidenName) &&
        Objects.equals(this.middleName, edFiStaff.middleName) &&
        Objects.equals(this.oldEthnicityDescriptor, edFiStaff.oldEthnicityDescriptor) &&
        Objects.equals(this.otherNames, edFiStaff.otherNames) &&
        Objects.equals(this.personalIdentificationDocuments, edFiStaff.personalIdentificationDocuments) &&
        Objects.equals(this.personalTitlePrefix, edFiStaff.personalTitlePrefix) &&
        Objects.equals(this.races, edFiStaff.races) &&
        Objects.equals(this.recognitions, edFiStaff.recognitions) &&
        Objects.equals(this.sexDescriptor, edFiStaff.sexDescriptor) &&
        Objects.equals(this.telephones, edFiStaff.telephones) &&
        Objects.equals(this.tribalAffiliations, edFiStaff.tribalAffiliations) &&
        Objects.equals(this.visas, edFiStaff.visas) &&
        Objects.equals(this.yearsOfPriorProfessionalExperience, edFiStaff.yearsOfPriorProfessionalExperience) &&
        Objects.equals(this.yearsOfPriorTeachingExperience, edFiStaff.yearsOfPriorTeachingExperience) &&
        Objects.equals(this.etag, edFiStaff.etag) &&
        Objects.equals(this.ext, edFiStaff.ext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, staffUniqueId, addresses, birthDate, citizenshipStatusDescriptor, credentials, electronicMails, firstName, generationCodeSuffix, highestCompletedLevelOfEducationDescriptor, highlyQualifiedTeacher, hispanicLatinoEthnicity, identificationCodes, identificationDocuments, internationalAddresses, languages, lastSurname, loginId, maidenName, middleName, oldEthnicityDescriptor, otherNames, personalIdentificationDocuments, personalTitlePrefix, races, recognitions, sexDescriptor, telephones, tribalAffiliations, visas, yearsOfPriorProfessionalExperience, yearsOfPriorTeachingExperience, etag, ext);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStaff {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    staffUniqueId: ").append(toIndentedString(staffUniqueId)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    citizenshipStatusDescriptor: ").append(toIndentedString(citizenshipStatusDescriptor)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    electronicMails: ").append(toIndentedString(electronicMails)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    generationCodeSuffix: ").append(toIndentedString(generationCodeSuffix)).append("\n");
    sb.append("    highestCompletedLevelOfEducationDescriptor: ").append(toIndentedString(highestCompletedLevelOfEducationDescriptor)).append("\n");
    sb.append("    highlyQualifiedTeacher: ").append(toIndentedString(highlyQualifiedTeacher)).append("\n");
    sb.append("    hispanicLatinoEthnicity: ").append(toIndentedString(hispanicLatinoEthnicity)).append("\n");
    sb.append("    identificationCodes: ").append(toIndentedString(identificationCodes)).append("\n");
    sb.append("    identificationDocuments: ").append(toIndentedString(identificationDocuments)).append("\n");
    sb.append("    internationalAddresses: ").append(toIndentedString(internationalAddresses)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    lastSurname: ").append(toIndentedString(lastSurname)).append("\n");
    sb.append("    loginId: ").append(toIndentedString(loginId)).append("\n");
    sb.append("    maidenName: ").append(toIndentedString(maidenName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    oldEthnicityDescriptor: ").append(toIndentedString(oldEthnicityDescriptor)).append("\n");
    sb.append("    otherNames: ").append(toIndentedString(otherNames)).append("\n");
    sb.append("    personalIdentificationDocuments: ").append(toIndentedString(personalIdentificationDocuments)).append("\n");
    sb.append("    personalTitlePrefix: ").append(toIndentedString(personalTitlePrefix)).append("\n");
    sb.append("    races: ").append(toIndentedString(races)).append("\n");
    sb.append("    recognitions: ").append(toIndentedString(recognitions)).append("\n");
    sb.append("    sexDescriptor: ").append(toIndentedString(sexDescriptor)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("    tribalAffiliations: ").append(toIndentedString(tribalAffiliations)).append("\n");
    sb.append("    visas: ").append(toIndentedString(visas)).append("\n");
    sb.append("    yearsOfPriorProfessionalExperience: ").append(toIndentedString(yearsOfPriorProfessionalExperience)).append("\n");
    sb.append("    yearsOfPriorTeachingExperience: ").append(toIndentedString(yearsOfPriorTeachingExperience)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    ext: ").append(toIndentedString(ext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

