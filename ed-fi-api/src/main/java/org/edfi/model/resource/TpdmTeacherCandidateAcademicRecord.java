/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.edfi.model.resource.EdFiEducationOrganizationReference;
import org.edfi.model.resource.EdFiSchoolYearTypeReference;
import org.edfi.model.resource.TpdmTeacherCandidateAcademicRecordAcademicHonor;
import org.edfi.model.resource.TpdmTeacherCandidateAcademicRecordClassRanking;
import org.edfi.model.resource.TpdmTeacherCandidateAcademicRecordDiploma;
import org.edfi.model.resource.TpdmTeacherCandidateAcademicRecordGradePointAverage;
import org.edfi.model.resource.TpdmTeacherCandidateAcademicRecordRecognition;
import org.edfi.model.resource.TpdmTeacherCandidateReference;
import org.joda.time.LocalDate;


/**
 * TpdmTeacherCandidateAcademicRecord
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class TpdmTeacherCandidateAcademicRecord   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("termDescriptor")
  private String termDescriptor = null;

  @SerializedName("educationOrganizationReference")
  private EdFiEducationOrganizationReference educationOrganizationReference = null;

  @SerializedName("schoolYearTypeReference")
  private EdFiSchoolYearTypeReference schoolYearTypeReference = null;

  @SerializedName("teacherCandidateReference")
  private TpdmTeacherCandidateReference teacherCandidateReference = null;

  @SerializedName("academicHonors")
  private List<TpdmTeacherCandidateAcademicRecordAcademicHonor> academicHonors = new ArrayList<TpdmTeacherCandidateAcademicRecordAcademicHonor>();

  @SerializedName("classRanking")
  private TpdmTeacherCandidateAcademicRecordClassRanking classRanking = null;

  @SerializedName("contentGradePointAverage")
  private Double contentGradePointAverage = null;

  @SerializedName("contentGradePointEarned")
  private Double contentGradePointEarned = null;

  @SerializedName("cumulativeAttemptedCreditConversion")
  private Double cumulativeAttemptedCreditConversion = null;

  @SerializedName("cumulativeAttemptedCredits")
  private Double cumulativeAttemptedCredits = null;

  @SerializedName("cumulativeAttemptedCreditTypeDescriptor")
  private String cumulativeAttemptedCreditTypeDescriptor = null;

  @SerializedName("cumulativeEarnedCreditConversion")
  private Double cumulativeEarnedCreditConversion = null;

  @SerializedName("cumulativeEarnedCredits")
  private Double cumulativeEarnedCredits = null;

  @SerializedName("cumulativeEarnedCreditTypeDescriptor")
  private String cumulativeEarnedCreditTypeDescriptor = null;

  @SerializedName("cumulativeGradePointAverage")
  private Double cumulativeGradePointAverage = null;

  @SerializedName("cumulativeGradePointsEarned")
  private Double cumulativeGradePointsEarned = null;

  @SerializedName("diplomas")
  private List<TpdmTeacherCandidateAcademicRecordDiploma> diplomas = new ArrayList<TpdmTeacherCandidateAcademicRecordDiploma>();

  @SerializedName("gradePointAverages")
  private List<TpdmTeacherCandidateAcademicRecordGradePointAverage> gradePointAverages = new ArrayList<TpdmTeacherCandidateAcademicRecordGradePointAverage>();

  @SerializedName("gradeValueQualifier")
  private String gradeValueQualifier = null;

  @SerializedName("programGatewayDescriptor")
  private String programGatewayDescriptor = null;

  @SerializedName("projectedGraduationDate")
  private LocalDate projectedGraduationDate = null;

  @SerializedName("recognitions")
  private List<TpdmTeacherCandidateAcademicRecordRecognition> recognitions = new ArrayList<TpdmTeacherCandidateAcademicRecordRecognition>();

  @SerializedName("sessionAttemptedCreditConversion")
  private Double sessionAttemptedCreditConversion = null;

  @SerializedName("sessionAttemptedCredits")
  private Double sessionAttemptedCredits = null;

  @SerializedName("sessionAttemptedCreditTypeDescriptor")
  private String sessionAttemptedCreditTypeDescriptor = null;

  @SerializedName("sessionEarnedCreditConversion")
  private Double sessionEarnedCreditConversion = null;

  @SerializedName("sessionEarnedCredits")
  private Double sessionEarnedCredits = null;

  @SerializedName("sessionEarnedCreditTypeDescriptor")
  private String sessionEarnedCreditTypeDescriptor = null;

  @SerializedName("sessionGradePointAverage")
  private Double sessionGradePointAverage = null;

  @SerializedName("sessionGradePointsEarned")
  private Double sessionGradePointsEarned = null;

  @SerializedName("tppDegreeTypeDescriptor")
  private String tppDegreeTypeDescriptor = null;

  @SerializedName("_etag")
  private String etag = null;

  public TpdmTeacherCandidateAcademicRecord id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TpdmTeacherCandidateAcademicRecord termDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
    return this;
  }

   /**
   * The term for the session during the school year.
   * @return termDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The term for the session during the school year.")
  public String getTermDescriptor() {
    return termDescriptor;
  }

  public void setTermDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
  }

  public TpdmTeacherCandidateAcademicRecord educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }

  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }

  public TpdmTeacherCandidateAcademicRecord schoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    this.schoolYearTypeReference = schoolYearTypeReference;
    return this;
  }

   /**
   * Get schoolYearTypeReference
   * @return schoolYearTypeReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiSchoolYearTypeReference getSchoolYearTypeReference() {
    return schoolYearTypeReference;
  }

  public void setSchoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    this.schoolYearTypeReference = schoolYearTypeReference;
  }

  public TpdmTeacherCandidateAcademicRecord teacherCandidateReference(TpdmTeacherCandidateReference teacherCandidateReference) {
    this.teacherCandidateReference = teacherCandidateReference;
    return this;
  }

   /**
   * Get teacherCandidateReference
   * @return teacherCandidateReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public TpdmTeacherCandidateReference getTeacherCandidateReference() {
    return teacherCandidateReference;
  }

  public void setTeacherCandidateReference(TpdmTeacherCandidateReference teacherCandidateReference) {
    this.teacherCandidateReference = teacherCandidateReference;
  }

  public TpdmTeacherCandidateAcademicRecord academicHonors(List<TpdmTeacherCandidateAcademicRecordAcademicHonor> academicHonors) {
    this.academicHonors = academicHonors;
    return this;
  }

  public TpdmTeacherCandidateAcademicRecord addAcademicHonorsItem(TpdmTeacherCandidateAcademicRecordAcademicHonor academicHonorsItem) {
    this.academicHonors.add(academicHonorsItem);
    return this;
  }

   /**
   * An unordered collection of teacherCandidateAcademicRecordAcademicHonors. Academic distinctions earned by or awarded to the student.
   * @return academicHonors
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of teacherCandidateAcademicRecordAcademicHonors. Academic distinctions earned by or awarded to the student.")
  public List<TpdmTeacherCandidateAcademicRecordAcademicHonor> getAcademicHonors() {
    return academicHonors;
  }

  public void setAcademicHonors(List<TpdmTeacherCandidateAcademicRecordAcademicHonor> academicHonors) {
    this.academicHonors = academicHonors;
  }

  public TpdmTeacherCandidateAcademicRecord classRanking(TpdmTeacherCandidateAcademicRecordClassRanking classRanking) {
    this.classRanking = classRanking;
    return this;
  }

   /**
   * Get classRanking
   * @return classRanking
  **/
  @ApiModelProperty(example = "null", value = "")
  public TpdmTeacherCandidateAcademicRecordClassRanking getClassRanking() {
    return classRanking;
  }

  public void setClassRanking(TpdmTeacherCandidateAcademicRecordClassRanking classRanking) {
    this.classRanking = classRanking;
  }

  public TpdmTeacherCandidateAcademicRecord contentGradePointAverage(Double contentGradePointAverage) {
    this.contentGradePointAverage = contentGradePointAverage;
    return this;
  }

   /**
   * A measure of average performance in all courses taken by an individual within a given content area during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.
   * @return contentGradePointAverage
  **/
  @ApiModelProperty(example = "null", value = "A measure of average performance in all courses taken by an individual within a given content area during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.")
  public Double getContentGradePointAverage() {
    return contentGradePointAverage;
  }

  public void setContentGradePointAverage(Double contentGradePointAverage) {
    this.contentGradePointAverage = contentGradePointAverage;
  }

  public TpdmTeacherCandidateAcademicRecord contentGradePointEarned(Double contentGradePointEarned) {
    this.contentGradePointEarned = contentGradePointEarned;
    return this;
  }

   /**
   * The cumulative number of grade points an individual earns within a given content area by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.
   * @return contentGradePointEarned
  **/
  @ApiModelProperty(example = "null", value = "The cumulative number of grade points an individual earns within a given content area by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.")
  public Double getContentGradePointEarned() {
    return contentGradePointEarned;
  }

  public void setContentGradePointEarned(Double contentGradePointEarned) {
    this.contentGradePointEarned = contentGradePointEarned;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeAttemptedCreditConversion(Double cumulativeAttemptedCreditConversion) {
    this.cumulativeAttemptedCreditConversion = cumulativeAttemptedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return cumulativeAttemptedCreditConversion
  **/
  @ApiModelProperty(example = "null", value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")
  public Double getCumulativeAttemptedCreditConversion() {
    return cumulativeAttemptedCreditConversion;
  }

  public void setCumulativeAttemptedCreditConversion(Double cumulativeAttemptedCreditConversion) {
    this.cumulativeAttemptedCreditConversion = cumulativeAttemptedCreditConversion;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeAttemptedCredits(Double cumulativeAttemptedCredits) {
    this.cumulativeAttemptedCredits = cumulativeAttemptedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return cumulativeAttemptedCredits
  **/
  @ApiModelProperty(example = "null", value = "The value of credits or units of value awarded for the completion of a course.")
  public Double getCumulativeAttemptedCredits() {
    return cumulativeAttemptedCredits;
  }

  public void setCumulativeAttemptedCredits(Double cumulativeAttemptedCredits) {
    this.cumulativeAttemptedCredits = cumulativeAttemptedCredits;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeAttemptedCreditTypeDescriptor(String cumulativeAttemptedCreditTypeDescriptor) {
    this.cumulativeAttemptedCreditTypeDescriptor = cumulativeAttemptedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return cumulativeAttemptedCreditTypeDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The type of credits or units of value awarded for the completion of a course.")
  public String getCumulativeAttemptedCreditTypeDescriptor() {
    return cumulativeAttemptedCreditTypeDescriptor;
  }

  public void setCumulativeAttemptedCreditTypeDescriptor(String cumulativeAttemptedCreditTypeDescriptor) {
    this.cumulativeAttemptedCreditTypeDescriptor = cumulativeAttemptedCreditTypeDescriptor;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeEarnedCreditConversion(Double cumulativeEarnedCreditConversion) {
    this.cumulativeEarnedCreditConversion = cumulativeEarnedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return cumulativeEarnedCreditConversion
  **/
  @ApiModelProperty(example = "null", value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")
  public Double getCumulativeEarnedCreditConversion() {
    return cumulativeEarnedCreditConversion;
  }

  public void setCumulativeEarnedCreditConversion(Double cumulativeEarnedCreditConversion) {
    this.cumulativeEarnedCreditConversion = cumulativeEarnedCreditConversion;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeEarnedCredits(Double cumulativeEarnedCredits) {
    this.cumulativeEarnedCredits = cumulativeEarnedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return cumulativeEarnedCredits
  **/
  @ApiModelProperty(example = "null", value = "The value of credits or units of value awarded for the completion of a course.")
  public Double getCumulativeEarnedCredits() {
    return cumulativeEarnedCredits;
  }

  public void setCumulativeEarnedCredits(Double cumulativeEarnedCredits) {
    this.cumulativeEarnedCredits = cumulativeEarnedCredits;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeEarnedCreditTypeDescriptor(String cumulativeEarnedCreditTypeDescriptor) {
    this.cumulativeEarnedCreditTypeDescriptor = cumulativeEarnedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return cumulativeEarnedCreditTypeDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The type of credits or units of value awarded for the completion of a course.")
  public String getCumulativeEarnedCreditTypeDescriptor() {
    return cumulativeEarnedCreditTypeDescriptor;
  }

  public void setCumulativeEarnedCreditTypeDescriptor(String cumulativeEarnedCreditTypeDescriptor) {
    this.cumulativeEarnedCreditTypeDescriptor = cumulativeEarnedCreditTypeDescriptor;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeGradePointAverage(Double cumulativeGradePointAverage) {
    this.cumulativeGradePointAverage = cumulativeGradePointAverage;
    return this;
  }

   /**
   * A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.
   * @return cumulativeGradePointAverage
  **/
  @ApiModelProperty(example = "null", value = "A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.")
  public Double getCumulativeGradePointAverage() {
    return cumulativeGradePointAverage;
  }

  public void setCumulativeGradePointAverage(Double cumulativeGradePointAverage) {
    this.cumulativeGradePointAverage = cumulativeGradePointAverage;
  }

  public TpdmTeacherCandidateAcademicRecord cumulativeGradePointsEarned(Double cumulativeGradePointsEarned) {
    this.cumulativeGradePointsEarned = cumulativeGradePointsEarned;
    return this;
  }

   /**
   * The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.
   * @return cumulativeGradePointsEarned
  **/
  @ApiModelProperty(example = "null", value = "The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.")
  public Double getCumulativeGradePointsEarned() {
    return cumulativeGradePointsEarned;
  }

  public void setCumulativeGradePointsEarned(Double cumulativeGradePointsEarned) {
    this.cumulativeGradePointsEarned = cumulativeGradePointsEarned;
  }

  public TpdmTeacherCandidateAcademicRecord diplomas(List<TpdmTeacherCandidateAcademicRecordDiploma> diplomas) {
    this.diplomas = diplomas;
    return this;
  }

  public TpdmTeacherCandidateAcademicRecord addDiplomasItem(TpdmTeacherCandidateAcademicRecordDiploma diplomasItem) {
    this.diplomas.add(diplomasItem);
    return this;
  }

   /**
   * An unordered collection of teacherCandidateAcademicRecordDiplomas. Diploma(s) earned by the student.
   * @return diplomas
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of teacherCandidateAcademicRecordDiplomas. Diploma(s) earned by the student.")
  public List<TpdmTeacherCandidateAcademicRecordDiploma> getDiplomas() {
    return diplomas;
  }

  public void setDiplomas(List<TpdmTeacherCandidateAcademicRecordDiploma> diplomas) {
    this.diplomas = diplomas;
  }

  public TpdmTeacherCandidateAcademicRecord gradePointAverages(List<TpdmTeacherCandidateAcademicRecordGradePointAverage> gradePointAverages) {
    this.gradePointAverages = gradePointAverages;
    return this;
  }

  public TpdmTeacherCandidateAcademicRecord addGradePointAveragesItem(TpdmTeacherCandidateAcademicRecordGradePointAverage gradePointAveragesItem) {
    this.gradePointAverages.add(gradePointAveragesItem);
    return this;
  }

   /**
   * An unordered collection of teacherCandidateAcademicRecordGradePointAverages. Data that provides information on a measure of average performance in a group of courses taken by an individual.
   * @return gradePointAverages
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of teacherCandidateAcademicRecordGradePointAverages. Data that provides information on a measure of average performance in a group of courses taken by an individual.")
  public List<TpdmTeacherCandidateAcademicRecordGradePointAverage> getGradePointAverages() {
    return gradePointAverages;
  }

  public void setGradePointAverages(List<TpdmTeacherCandidateAcademicRecordGradePointAverage> gradePointAverages) {
    this.gradePointAverages = gradePointAverages;
  }

  public TpdmTeacherCandidateAcademicRecord gradeValueQualifier(String gradeValueQualifier) {
    this.gradeValueQualifier = gradeValueQualifier;
    return this;
  }

   /**
   * The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student's Grade Point Average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.)
   * @return gradeValueQualifier
  **/
  @ApiModelProperty(example = "null", value = "The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student's Grade Point Average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.)")
  public String getGradeValueQualifier() {
    return gradeValueQualifier;
  }

  public void setGradeValueQualifier(String gradeValueQualifier) {
    this.gradeValueQualifier = gradeValueQualifier;
  }

  public TpdmTeacherCandidateAcademicRecord programGatewayDescriptor(String programGatewayDescriptor) {
    this.programGatewayDescriptor = programGatewayDescriptor;
    return this;
  }

   /**
   * Identifies the program gateway that may be associated for continuation in the program.
   * @return programGatewayDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "Identifies the program gateway that may be associated for continuation in the program.")
  public String getProgramGatewayDescriptor() {
    return programGatewayDescriptor;
  }

  public void setProgramGatewayDescriptor(String programGatewayDescriptor) {
    this.programGatewayDescriptor = programGatewayDescriptor;
  }

  public TpdmTeacherCandidateAcademicRecord projectedGraduationDate(LocalDate projectedGraduationDate) {
    this.projectedGraduationDate = projectedGraduationDate;
    return this;
  }

   /**
   * The month and year the student is projected to graduate.
   * @return projectedGraduationDate
  **/
  @ApiModelProperty(example = "null", value = "The month and year the student is projected to graduate.")
  public LocalDate getProjectedGraduationDate() {
    return projectedGraduationDate;
  }

  public void setProjectedGraduationDate(LocalDate projectedGraduationDate) {
    this.projectedGraduationDate = projectedGraduationDate;
  }

  public TpdmTeacherCandidateAcademicRecord recognitions(List<TpdmTeacherCandidateAcademicRecordRecognition> recognitions) {
    this.recognitions = recognitions;
    return this;
  }

  public TpdmTeacherCandidateAcademicRecord addRecognitionsItem(TpdmTeacherCandidateAcademicRecordRecognition recognitionsItem) {
    this.recognitions.add(recognitionsItem);
    return this;
  }

   /**
   * An unordered collection of teacherCandidateAcademicRecordRecognitions. Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.
   * @return recognitions
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of teacherCandidateAcademicRecordRecognitions. Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.")
  public List<TpdmTeacherCandidateAcademicRecordRecognition> getRecognitions() {
    return recognitions;
  }

  public void setRecognitions(List<TpdmTeacherCandidateAcademicRecordRecognition> recognitions) {
    this.recognitions = recognitions;
  }

  public TpdmTeacherCandidateAcademicRecord sessionAttemptedCreditConversion(Double sessionAttemptedCreditConversion) {
    this.sessionAttemptedCreditConversion = sessionAttemptedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return sessionAttemptedCreditConversion
  **/
  @ApiModelProperty(example = "null", value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")
  public Double getSessionAttemptedCreditConversion() {
    return sessionAttemptedCreditConversion;
  }

  public void setSessionAttemptedCreditConversion(Double sessionAttemptedCreditConversion) {
    this.sessionAttemptedCreditConversion = sessionAttemptedCreditConversion;
  }

  public TpdmTeacherCandidateAcademicRecord sessionAttemptedCredits(Double sessionAttemptedCredits) {
    this.sessionAttemptedCredits = sessionAttemptedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return sessionAttemptedCredits
  **/
  @ApiModelProperty(example = "null", value = "The value of credits or units of value awarded for the completion of a course.")
  public Double getSessionAttemptedCredits() {
    return sessionAttemptedCredits;
  }

  public void setSessionAttemptedCredits(Double sessionAttemptedCredits) {
    this.sessionAttemptedCredits = sessionAttemptedCredits;
  }

  public TpdmTeacherCandidateAcademicRecord sessionAttemptedCreditTypeDescriptor(String sessionAttemptedCreditTypeDescriptor) {
    this.sessionAttemptedCreditTypeDescriptor = sessionAttemptedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return sessionAttemptedCreditTypeDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The type of credits or units of value awarded for the completion of a course.")
  public String getSessionAttemptedCreditTypeDescriptor() {
    return sessionAttemptedCreditTypeDescriptor;
  }

  public void setSessionAttemptedCreditTypeDescriptor(String sessionAttemptedCreditTypeDescriptor) {
    this.sessionAttemptedCreditTypeDescriptor = sessionAttemptedCreditTypeDescriptor;
  }

  public TpdmTeacherCandidateAcademicRecord sessionEarnedCreditConversion(Double sessionEarnedCreditConversion) {
    this.sessionEarnedCreditConversion = sessionEarnedCreditConversion;
    return this;
  }

   /**
   * Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
   * @return sessionEarnedCreditConversion
  **/
  @ApiModelProperty(example = "null", value = "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.")
  public Double getSessionEarnedCreditConversion() {
    return sessionEarnedCreditConversion;
  }

  public void setSessionEarnedCreditConversion(Double sessionEarnedCreditConversion) {
    this.sessionEarnedCreditConversion = sessionEarnedCreditConversion;
  }

  public TpdmTeacherCandidateAcademicRecord sessionEarnedCredits(Double sessionEarnedCredits) {
    this.sessionEarnedCredits = sessionEarnedCredits;
    return this;
  }

   /**
   * The value of credits or units of value awarded for the completion of a course.
   * @return sessionEarnedCredits
  **/
  @ApiModelProperty(example = "null", value = "The value of credits or units of value awarded for the completion of a course.")
  public Double getSessionEarnedCredits() {
    return sessionEarnedCredits;
  }

  public void setSessionEarnedCredits(Double sessionEarnedCredits) {
    this.sessionEarnedCredits = sessionEarnedCredits;
  }

  public TpdmTeacherCandidateAcademicRecord sessionEarnedCreditTypeDescriptor(String sessionEarnedCreditTypeDescriptor) {
    this.sessionEarnedCreditTypeDescriptor = sessionEarnedCreditTypeDescriptor;
    return this;
  }

   /**
   * The type of credits or units of value awarded for the completion of a course.
   * @return sessionEarnedCreditTypeDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The type of credits or units of value awarded for the completion of a course.")
  public String getSessionEarnedCreditTypeDescriptor() {
    return sessionEarnedCreditTypeDescriptor;
  }

  public void setSessionEarnedCreditTypeDescriptor(String sessionEarnedCreditTypeDescriptor) {
    this.sessionEarnedCreditTypeDescriptor = sessionEarnedCreditTypeDescriptor;
  }

  public TpdmTeacherCandidateAcademicRecord sessionGradePointAverage(Double sessionGradePointAverage) {
    this.sessionGradePointAverage = sessionGradePointAverage;
    return this;
  }

   /**
   * The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.
   * @return sessionGradePointAverage
  **/
  @ApiModelProperty(example = "null", value = "The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.")
  public Double getSessionGradePointAverage() {
    return sessionGradePointAverage;
  }

  public void setSessionGradePointAverage(Double sessionGradePointAverage) {
    this.sessionGradePointAverage = sessionGradePointAverage;
  }

  public TpdmTeacherCandidateAcademicRecord sessionGradePointsEarned(Double sessionGradePointsEarned) {
    this.sessionGradePointsEarned = sessionGradePointsEarned;
    return this;
  }

   /**
   * The number of grade points an individual earned for this session.
   * @return sessionGradePointsEarned
  **/
  @ApiModelProperty(example = "null", value = "The number of grade points an individual earned for this session.")
  public Double getSessionGradePointsEarned() {
    return sessionGradePointsEarned;
  }

  public void setSessionGradePointsEarned(Double sessionGradePointsEarned) {
    this.sessionGradePointsEarned = sessionGradePointsEarned;
  }

  public TpdmTeacherCandidateAcademicRecord tppDegreeTypeDescriptor(String tppDegreeTypeDescriptor) {
    this.tppDegreeTypeDescriptor = tppDegreeTypeDescriptor;
    return this;
  }

   /**
   * The degree type that a teacher candidate accomplishes.
   * @return tppDegreeTypeDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The degree type that a teacher candidate accomplishes.")
  public String getTppDegreeTypeDescriptor() {
    return tppDegreeTypeDescriptor;
  }

  public void setTppDegreeTypeDescriptor(String tppDegreeTypeDescriptor) {
    this.tppDegreeTypeDescriptor = tppDegreeTypeDescriptor;
  }

  public TpdmTeacherCandidateAcademicRecord etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmTeacherCandidateAcademicRecord tpdmTeacherCandidateAcademicRecord = (TpdmTeacherCandidateAcademicRecord) o;
    return Objects.equals(this.id, tpdmTeacherCandidateAcademicRecord.id) &&
        Objects.equals(this.termDescriptor, tpdmTeacherCandidateAcademicRecord.termDescriptor) &&
        Objects.equals(this.educationOrganizationReference, tpdmTeacherCandidateAcademicRecord.educationOrganizationReference) &&
        Objects.equals(this.schoolYearTypeReference, tpdmTeacherCandidateAcademicRecord.schoolYearTypeReference) &&
        Objects.equals(this.teacherCandidateReference, tpdmTeacherCandidateAcademicRecord.teacherCandidateReference) &&
        Objects.equals(this.academicHonors, tpdmTeacherCandidateAcademicRecord.academicHonors) &&
        Objects.equals(this.classRanking, tpdmTeacherCandidateAcademicRecord.classRanking) &&
        Objects.equals(this.contentGradePointAverage, tpdmTeacherCandidateAcademicRecord.contentGradePointAverage) &&
        Objects.equals(this.contentGradePointEarned, tpdmTeacherCandidateAcademicRecord.contentGradePointEarned) &&
        Objects.equals(this.cumulativeAttemptedCreditConversion, tpdmTeacherCandidateAcademicRecord.cumulativeAttemptedCreditConversion) &&
        Objects.equals(this.cumulativeAttemptedCredits, tpdmTeacherCandidateAcademicRecord.cumulativeAttemptedCredits) &&
        Objects.equals(this.cumulativeAttemptedCreditTypeDescriptor, tpdmTeacherCandidateAcademicRecord.cumulativeAttemptedCreditTypeDescriptor) &&
        Objects.equals(this.cumulativeEarnedCreditConversion, tpdmTeacherCandidateAcademicRecord.cumulativeEarnedCreditConversion) &&
        Objects.equals(this.cumulativeEarnedCredits, tpdmTeacherCandidateAcademicRecord.cumulativeEarnedCredits) &&
        Objects.equals(this.cumulativeEarnedCreditTypeDescriptor, tpdmTeacherCandidateAcademicRecord.cumulativeEarnedCreditTypeDescriptor) &&
        Objects.equals(this.cumulativeGradePointAverage, tpdmTeacherCandidateAcademicRecord.cumulativeGradePointAverage) &&
        Objects.equals(this.cumulativeGradePointsEarned, tpdmTeacherCandidateAcademicRecord.cumulativeGradePointsEarned) &&
        Objects.equals(this.diplomas, tpdmTeacherCandidateAcademicRecord.diplomas) &&
        Objects.equals(this.gradePointAverages, tpdmTeacherCandidateAcademicRecord.gradePointAverages) &&
        Objects.equals(this.gradeValueQualifier, tpdmTeacherCandidateAcademicRecord.gradeValueQualifier) &&
        Objects.equals(this.programGatewayDescriptor, tpdmTeacherCandidateAcademicRecord.programGatewayDescriptor) &&
        Objects.equals(this.projectedGraduationDate, tpdmTeacherCandidateAcademicRecord.projectedGraduationDate) &&
        Objects.equals(this.recognitions, tpdmTeacherCandidateAcademicRecord.recognitions) &&
        Objects.equals(this.sessionAttemptedCreditConversion, tpdmTeacherCandidateAcademicRecord.sessionAttemptedCreditConversion) &&
        Objects.equals(this.sessionAttemptedCredits, tpdmTeacherCandidateAcademicRecord.sessionAttemptedCredits) &&
        Objects.equals(this.sessionAttemptedCreditTypeDescriptor, tpdmTeacherCandidateAcademicRecord.sessionAttemptedCreditTypeDescriptor) &&
        Objects.equals(this.sessionEarnedCreditConversion, tpdmTeacherCandidateAcademicRecord.sessionEarnedCreditConversion) &&
        Objects.equals(this.sessionEarnedCredits, tpdmTeacherCandidateAcademicRecord.sessionEarnedCredits) &&
        Objects.equals(this.sessionEarnedCreditTypeDescriptor, tpdmTeacherCandidateAcademicRecord.sessionEarnedCreditTypeDescriptor) &&
        Objects.equals(this.sessionGradePointAverage, tpdmTeacherCandidateAcademicRecord.sessionGradePointAverage) &&
        Objects.equals(this.sessionGradePointsEarned, tpdmTeacherCandidateAcademicRecord.sessionGradePointsEarned) &&
        Objects.equals(this.tppDegreeTypeDescriptor, tpdmTeacherCandidateAcademicRecord.tppDegreeTypeDescriptor) &&
        Objects.equals(this.etag, tpdmTeacherCandidateAcademicRecord.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, termDescriptor, educationOrganizationReference, schoolYearTypeReference, teacherCandidateReference, academicHonors, classRanking, contentGradePointAverage, contentGradePointEarned, cumulativeAttemptedCreditConversion, cumulativeAttemptedCredits, cumulativeAttemptedCreditTypeDescriptor, cumulativeEarnedCreditConversion, cumulativeEarnedCredits, cumulativeEarnedCreditTypeDescriptor, cumulativeGradePointAverage, cumulativeGradePointsEarned, diplomas, gradePointAverages, gradeValueQualifier, programGatewayDescriptor, projectedGraduationDate, recognitions, sessionAttemptedCreditConversion, sessionAttemptedCredits, sessionAttemptedCreditTypeDescriptor, sessionEarnedCreditConversion, sessionEarnedCredits, sessionEarnedCreditTypeDescriptor, sessionGradePointAverage, sessionGradePointsEarned, tppDegreeTypeDescriptor, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmTeacherCandidateAcademicRecord {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    termDescriptor: ").append(toIndentedString(termDescriptor)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    schoolYearTypeReference: ").append(toIndentedString(schoolYearTypeReference)).append("\n");
    sb.append("    teacherCandidateReference: ").append(toIndentedString(teacherCandidateReference)).append("\n");
    sb.append("    academicHonors: ").append(toIndentedString(academicHonors)).append("\n");
    sb.append("    classRanking: ").append(toIndentedString(classRanking)).append("\n");
    sb.append("    contentGradePointAverage: ").append(toIndentedString(contentGradePointAverage)).append("\n");
    sb.append("    contentGradePointEarned: ").append(toIndentedString(contentGradePointEarned)).append("\n");
    sb.append("    cumulativeAttemptedCreditConversion: ").append(toIndentedString(cumulativeAttemptedCreditConversion)).append("\n");
    sb.append("    cumulativeAttemptedCredits: ").append(toIndentedString(cumulativeAttemptedCredits)).append("\n");
    sb.append("    cumulativeAttemptedCreditTypeDescriptor: ").append(toIndentedString(cumulativeAttemptedCreditTypeDescriptor)).append("\n");
    sb.append("    cumulativeEarnedCreditConversion: ").append(toIndentedString(cumulativeEarnedCreditConversion)).append("\n");
    sb.append("    cumulativeEarnedCredits: ").append(toIndentedString(cumulativeEarnedCredits)).append("\n");
    sb.append("    cumulativeEarnedCreditTypeDescriptor: ").append(toIndentedString(cumulativeEarnedCreditTypeDescriptor)).append("\n");
    sb.append("    cumulativeGradePointAverage: ").append(toIndentedString(cumulativeGradePointAverage)).append("\n");
    sb.append("    cumulativeGradePointsEarned: ").append(toIndentedString(cumulativeGradePointsEarned)).append("\n");
    sb.append("    diplomas: ").append(toIndentedString(diplomas)).append("\n");
    sb.append("    gradePointAverages: ").append(toIndentedString(gradePointAverages)).append("\n");
    sb.append("    gradeValueQualifier: ").append(toIndentedString(gradeValueQualifier)).append("\n");
    sb.append("    programGatewayDescriptor: ").append(toIndentedString(programGatewayDescriptor)).append("\n");
    sb.append("    projectedGraduationDate: ").append(toIndentedString(projectedGraduationDate)).append("\n");
    sb.append("    recognitions: ").append(toIndentedString(recognitions)).append("\n");
    sb.append("    sessionAttemptedCreditConversion: ").append(toIndentedString(sessionAttemptedCreditConversion)).append("\n");
    sb.append("    sessionAttemptedCredits: ").append(toIndentedString(sessionAttemptedCredits)).append("\n");
    sb.append("    sessionAttemptedCreditTypeDescriptor: ").append(toIndentedString(sessionAttemptedCreditTypeDescriptor)).append("\n");
    sb.append("    sessionEarnedCreditConversion: ").append(toIndentedString(sessionEarnedCreditConversion)).append("\n");
    sb.append("    sessionEarnedCredits: ").append(toIndentedString(sessionEarnedCredits)).append("\n");
    sb.append("    sessionEarnedCreditTypeDescriptor: ").append(toIndentedString(sessionEarnedCreditTypeDescriptor)).append("\n");
    sb.append("    sessionGradePointAverage: ").append(toIndentedString(sessionGradePointAverage)).append("\n");
    sb.append("    sessionGradePointsEarned: ").append(toIndentedString(sessionGradePointsEarned)).append("\n");
    sb.append("    tppDegreeTypeDescriptor: ").append(toIndentedString(tppDegreeTypeDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

