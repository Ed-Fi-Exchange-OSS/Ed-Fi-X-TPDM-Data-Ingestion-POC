/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.edfi.model.resource.EdFiLearningObjectiveAcademicSubject;
import org.edfi.model.resource.EdFiLearningObjectiveContentStandard;
import org.edfi.model.resource.EdFiLearningObjectiveGradeLevel;
import org.edfi.model.resource.EdFiLearningObjectiveLearningStandard;
import org.edfi.model.resource.EdFiLearningObjectiveReference;


/**
 * EdFiLearningObjective
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiLearningObjective   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("academicSubjects")
  private List<EdFiLearningObjectiveAcademicSubject> academicSubjects = new ArrayList<EdFiLearningObjectiveAcademicSubject>();

  @SerializedName("learningObjectiveId")
  private String learningObjectiveId = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("parentLearningObjectiveReference")
  private EdFiLearningObjectiveReference parentLearningObjectiveReference = null;

  @SerializedName("contentStandard")
  private EdFiLearningObjectiveContentStandard contentStandard = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("gradeLevels")
  private List<EdFiLearningObjectiveGradeLevel> gradeLevels = new ArrayList<EdFiLearningObjectiveGradeLevel>();

  @SerializedName("learningStandards")
  private List<EdFiLearningObjectiveLearningStandard> learningStandards = new ArrayList<EdFiLearningObjectiveLearningStandard>();

  @SerializedName("nomenclature")
  private String nomenclature = null;

  @SerializedName("objective")
  private String objective = null;

  @SerializedName("successCriteria")
  private String successCriteria = null;

  @SerializedName("_etag")
  private String etag = null;

  public EdFiLearningObjective id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiLearningObjective academicSubjects(List<EdFiLearningObjectiveAcademicSubject> academicSubjects) {
    this.academicSubjects = academicSubjects;
    return this;
  }

  public EdFiLearningObjective addAcademicSubjectsItem(EdFiLearningObjectiveAcademicSubject academicSubjectsItem) {
    this.academicSubjects.add(academicSubjectsItem);
    return this;
  }

   /**
   * An unordered collection of learningObjectiveAcademicSubjects. The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.
   * @return academicSubjects
  **/
  @ApiModelProperty(example = "null", required = true, value = "An unordered collection of learningObjectiveAcademicSubjects. The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.")
  public List<EdFiLearningObjectiveAcademicSubject> getAcademicSubjects() {
    return academicSubjects;
  }

  public void setAcademicSubjects(List<EdFiLearningObjectiveAcademicSubject> academicSubjects) {
    this.academicSubjects = academicSubjects;
  }

  public EdFiLearningObjective learningObjectiveId(String learningObjectiveId) {
    this.learningObjectiveId = learningObjectiveId;
    return this;
  }

   /**
   * The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).
   * @return learningObjectiveId
  **/
  @ApiModelProperty(example = "null", required = true, value = "The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).")
  public String getLearningObjectiveId() {
    return learningObjectiveId;
  }

  public void setLearningObjectiveId(String learningObjectiveId) {
    this.learningObjectiveId = learningObjectiveId;
  }

  public EdFiLearningObjective namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace for the LearningObjective.
   * @return namespace
  **/
  @ApiModelProperty(example = "null", required = true, value = "Namespace for the LearningObjective.")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public EdFiLearningObjective parentLearningObjectiveReference(EdFiLearningObjectiveReference parentLearningObjectiveReference) {
    this.parentLearningObjectiveReference = parentLearningObjectiveReference;
    return this;
  }

   /**
   * Get parentLearningObjectiveReference
   * @return parentLearningObjectiveReference
  **/
  @ApiModelProperty(example = "null", value = "")
  public EdFiLearningObjectiveReference getParentLearningObjectiveReference() {
    return parentLearningObjectiveReference;
  }

  public void setParentLearningObjectiveReference(EdFiLearningObjectiveReference parentLearningObjectiveReference) {
    this.parentLearningObjectiveReference = parentLearningObjectiveReference;
  }

  public EdFiLearningObjective contentStandard(EdFiLearningObjectiveContentStandard contentStandard) {
    this.contentStandard = contentStandard;
    return this;
  }

   /**
   * Get contentStandard
   * @return contentStandard
  **/
  @ApiModelProperty(example = "null", value = "")
  public EdFiLearningObjectiveContentStandard getContentStandard() {
    return contentStandard;
  }

  public void setContentStandard(EdFiLearningObjectiveContentStandard contentStandard) {
    this.contentStandard = contentStandard;
  }

  public EdFiLearningObjective description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the LearningObjective.
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "The description of the LearningObjective.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public EdFiLearningObjective gradeLevels(List<EdFiLearningObjectiveGradeLevel> gradeLevels) {
    this.gradeLevels = gradeLevels;
    return this;
  }

  public EdFiLearningObjective addGradeLevelsItem(EdFiLearningObjectiveGradeLevel gradeLevelsItem) {
    this.gradeLevels.add(gradeLevelsItem);
    return this;
  }

   /**
   * An unordered collection of learningObjectiveGradeLevels. The grade level for which the LearningObjective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.
   * @return gradeLevels
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of learningObjectiveGradeLevels. The grade level for which the LearningObjective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.")
  public List<EdFiLearningObjectiveGradeLevel> getGradeLevels() {
    return gradeLevels;
  }

  public void setGradeLevels(List<EdFiLearningObjectiveGradeLevel> gradeLevels) {
    this.gradeLevels = gradeLevels;
  }

  public EdFiLearningObjective learningStandards(List<EdFiLearningObjectiveLearningStandard> learningStandards) {
    this.learningStandards = learningStandards;
    return this;
  }

  public EdFiLearningObjective addLearningStandardsItem(EdFiLearningObjectiveLearningStandard learningStandardsItem) {
    this.learningStandards.add(learningStandardsItem);
    return this;
  }

   /**
   * An unordered collection of learningObjectiveLearningStandards. LearningStandard(s) included in this objective.
   * @return learningStandards
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of learningObjectiveLearningStandards. LearningStandard(s) included in this objective.")
  public List<EdFiLearningObjectiveLearningStandard> getLearningStandards() {
    return learningStandards;
  }

  public void setLearningStandards(List<EdFiLearningObjectiveLearningStandard> learningStandards) {
    this.learningStandards = learningStandards;
  }

  public EdFiLearningObjective nomenclature(String nomenclature) {
    this.nomenclature = nomenclature;
    return this;
  }

   /**
   * Reflects the specific nomenclature used for the LearningObjective.
   * @return nomenclature
  **/
  @ApiModelProperty(example = "null", value = "Reflects the specific nomenclature used for the LearningObjective.")
  public String getNomenclature() {
    return nomenclature;
  }

  public void setNomenclature(String nomenclature) {
    this.nomenclature = nomenclature;
  }

  public EdFiLearningObjective objective(String objective) {
    this.objective = objective;
    return this;
  }

   /**
   * The designated title of the LearningObjective.
   * @return objective
  **/
  @ApiModelProperty(example = "null", required = true, value = "The designated title of the LearningObjective.")
  public String getObjective() {
    return objective;
  }

  public void setObjective(String objective) {
    this.objective = objective;
  }

  public EdFiLearningObjective successCriteria(String successCriteria) {
    this.successCriteria = successCriteria;
    return this;
  }

   /**
   * One or more statements that describes the criteria used by teachers and students to check for attainment of a learning objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningObjective.
   * @return successCriteria
  **/
  @ApiModelProperty(example = "null", value = "One or more statements that describes the criteria used by teachers and students to check for attainment of a learning objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the LearningObjective.")
  public String getSuccessCriteria() {
    return successCriteria;
  }

  public void setSuccessCriteria(String successCriteria) {
    this.successCriteria = successCriteria;
  }

  public EdFiLearningObjective etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiLearningObjective edFiLearningObjective = (EdFiLearningObjective) o;
    return Objects.equals(this.id, edFiLearningObjective.id) &&
        Objects.equals(this.academicSubjects, edFiLearningObjective.academicSubjects) &&
        Objects.equals(this.learningObjectiveId, edFiLearningObjective.learningObjectiveId) &&
        Objects.equals(this.namespace, edFiLearningObjective.namespace) &&
        Objects.equals(this.parentLearningObjectiveReference, edFiLearningObjective.parentLearningObjectiveReference) &&
        Objects.equals(this.contentStandard, edFiLearningObjective.contentStandard) &&
        Objects.equals(this.description, edFiLearningObjective.description) &&
        Objects.equals(this.gradeLevels, edFiLearningObjective.gradeLevels) &&
        Objects.equals(this.learningStandards, edFiLearningObjective.learningStandards) &&
        Objects.equals(this.nomenclature, edFiLearningObjective.nomenclature) &&
        Objects.equals(this.objective, edFiLearningObjective.objective) &&
        Objects.equals(this.successCriteria, edFiLearningObjective.successCriteria) &&
        Objects.equals(this.etag, edFiLearningObjective.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, academicSubjects, learningObjectiveId, namespace, parentLearningObjectiveReference, contentStandard, description, gradeLevels, learningStandards, nomenclature, objective, successCriteria, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiLearningObjective {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    academicSubjects: ").append(toIndentedString(academicSubjects)).append("\n");
    sb.append("    learningObjectiveId: ").append(toIndentedString(learningObjectiveId)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    parentLearningObjectiveReference: ").append(toIndentedString(parentLearningObjectiveReference)).append("\n");
    sb.append("    contentStandard: ").append(toIndentedString(contentStandard)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gradeLevels: ").append(toIndentedString(gradeLevels)).append("\n");
    sb.append("    learningStandards: ").append(toIndentedString(learningStandards)).append("\n");
    sb.append("    nomenclature: ").append(toIndentedString(nomenclature)).append("\n");
    sb.append("    objective: ").append(toIndentedString(objective)).append("\n");
    sb.append("    successCriteria: ").append(toIndentedString(successCriteria)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

