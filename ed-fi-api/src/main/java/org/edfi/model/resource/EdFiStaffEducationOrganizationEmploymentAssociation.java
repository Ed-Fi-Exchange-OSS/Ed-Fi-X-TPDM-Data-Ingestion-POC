/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.edfi.model.resource.EdFiCredentialReference;
import org.edfi.model.resource.EdFiEducationOrganizationReference;
import org.edfi.model.resource.EdFiStaffReference;
import org.joda.time.LocalDate;


/**
 * EdFiStaffEducationOrganizationEmploymentAssociation
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiStaffEducationOrganizationEmploymentAssociation   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("employmentStatusDescriptor")
  private String employmentStatusDescriptor = null;

  @SerializedName("hireDate")
  private LocalDate hireDate = null;

  @SerializedName("credentialReference")
  private EdFiCredentialReference credentialReference = null;

  @SerializedName("educationOrganizationReference")
  private EdFiEducationOrganizationReference educationOrganizationReference = null;

  @SerializedName("staffReference")
  private EdFiStaffReference staffReference = null;

  @SerializedName("department")
  private String department = null;

  @SerializedName("endDate")
  private LocalDate endDate = null;

  @SerializedName("fullTimeEquivalency")
  private Double fullTimeEquivalency = null;

  @SerializedName("hourlyWage")
  private Double hourlyWage = null;

  @SerializedName("offerDate")
  private LocalDate offerDate = null;

  @SerializedName("separationDescriptor")
  private String separationDescriptor = null;

  @SerializedName("separationReasonDescriptor")
  private String separationReasonDescriptor = null;

  @SerializedName("_etag")
  private String etag = null;

  public EdFiStaffEducationOrganizationEmploymentAssociation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation employmentStatusDescriptor(String employmentStatusDescriptor) {
    this.employmentStatusDescriptor = employmentStatusDescriptor;
    return this;
  }

   /**
   * Reflects the type of employment or contract; for example:          Probationary          Contractual          Substitute/temporary          Tenured or permanent          Volunteer/no contract          ...
   * @return employmentStatusDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "Reflects the type of employment or contract; for example:          Probationary          Contractual          Substitute/temporary          Tenured or permanent          Volunteer/no contract          ...")
  public String getEmploymentStatusDescriptor() {
    return employmentStatusDescriptor;
  }

  public void setEmploymentStatusDescriptor(String employmentStatusDescriptor) {
    this.employmentStatusDescriptor = employmentStatusDescriptor;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation hireDate(LocalDate hireDate) {
    this.hireDate = hireDate;
    return this;
  }

   /**
   * The month, day, and year on which an individual was hired for a position.
   * @return hireDate
  **/
  @ApiModelProperty(example = "null", required = true, value = "The month, day, and year on which an individual was hired for a position.")
  public LocalDate getHireDate() {
    return hireDate;
  }

  public void setHireDate(LocalDate hireDate) {
    this.hireDate = hireDate;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation credentialReference(EdFiCredentialReference credentialReference) {
    this.credentialReference = credentialReference;
    return this;
  }

   /**
   * Get credentialReference
   * @return credentialReference
  **/
  @ApiModelProperty(example = "null", value = "")
  public EdFiCredentialReference getCredentialReference() {
    return credentialReference;
  }

  public void setCredentialReference(EdFiCredentialReference credentialReference) {
    this.credentialReference = credentialReference;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation educationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
    return this;
  }

   /**
   * Get educationOrganizationReference
   * @return educationOrganizationReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiEducationOrganizationReference getEducationOrganizationReference() {
    return educationOrganizationReference;
  }

  public void setEducationOrganizationReference(EdFiEducationOrganizationReference educationOrganizationReference) {
    this.educationOrganizationReference = educationOrganizationReference;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation staffReference(EdFiStaffReference staffReference) {
    this.staffReference = staffReference;
    return this;
  }

   /**
   * Get staffReference
   * @return staffReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiStaffReference getStaffReference() {
    return staffReference;
  }

  public void setStaffReference(EdFiStaffReference staffReference) {
    this.staffReference = staffReference;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation department(String department) {
    this.department = department;
    return this;
  }

   /**
   * The department or suborganization the employee/contractor is associated with in the EducationOrganization.
   * @return department
  **/
  @ApiModelProperty(example = "null", value = "The department or suborganization the employee/contractor is associated with in the EducationOrganization.")
  public String getDepartment() {
    return department;
  }

  public void setDepartment(String department) {
    this.department = department;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).
   * @return endDate
  **/
  @ApiModelProperty(example = "null", value = "The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation fullTimeEquivalency(Double fullTimeEquivalency) {
    this.fullTimeEquivalency = fullTimeEquivalency;
    return this;
  }

   /**
   * The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.
   * @return fullTimeEquivalency
  **/
  @ApiModelProperty(example = "null", value = "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.")
  public Double getFullTimeEquivalency() {
    return fullTimeEquivalency;
  }

  public void setFullTimeEquivalency(Double fullTimeEquivalency) {
    this.fullTimeEquivalency = fullTimeEquivalency;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation hourlyWage(Double hourlyWage) {
    this.hourlyWage = hourlyWage;
    return this;
  }

   /**
   * Hourly wage associated with the employment position being reported.
   * @return hourlyWage
  **/
  @ApiModelProperty(example = "null", value = "Hourly wage associated with the employment position being reported.")
  public Double getHourlyWage() {
    return hourlyWage;
  }

  public void setHourlyWage(Double hourlyWage) {
    this.hourlyWage = hourlyWage;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation offerDate(LocalDate offerDate) {
    this.offerDate = offerDate;
    return this;
  }

   /**
   * Date at which the staff member was made an official offer for this employment.
   * @return offerDate
  **/
  @ApiModelProperty(example = "null", value = "Date at which the staff member was made an official offer for this employment.")
  public LocalDate getOfferDate() {
    return offerDate;
  }

  public void setOfferDate(LocalDate offerDate) {
    this.offerDate = offerDate;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation separationDescriptor(String separationDescriptor) {
    this.separationDescriptor = separationDescriptor;
    return this;
  }

   /**
   * Type of employment separation; for example: Voluntary separation, Involuntary separation,          Mutual agreement          Other, etc.
   * @return separationDescriptor
  **/
  @ApiModelProperty(example = "null", value = "Type of employment separation; for example: Voluntary separation, Involuntary separation,          Mutual agreement          Other, etc.")
  public String getSeparationDescriptor() {
    return separationDescriptor;
  }

  public void setSeparationDescriptor(String separationDescriptor) {
    this.separationDescriptor = separationDescriptor;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation separationReasonDescriptor(String separationReasonDescriptor) {
    this.separationReasonDescriptor = separationReasonDescriptor;
    return this;
  }

   /**
   * Reason for terminating the employment; for example:          Employment in education          Employment outside of education          Retirement          Family/personal relocation          Change of assignment.
   * @return separationReasonDescriptor
  **/
  @ApiModelProperty(example = "null", value = "Reason for terminating the employment; for example:          Employment in education          Employment outside of education          Retirement          Family/personal relocation          Change of assignment.")
  public String getSeparationReasonDescriptor() {
    return separationReasonDescriptor;
  }

  public void setSeparationReasonDescriptor(String separationReasonDescriptor) {
    this.separationReasonDescriptor = separationReasonDescriptor;
  }

  public EdFiStaffEducationOrganizationEmploymentAssociation etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStaffEducationOrganizationEmploymentAssociation edFiStaffEducationOrganizationEmploymentAssociation = (EdFiStaffEducationOrganizationEmploymentAssociation) o;
    return Objects.equals(this.id, edFiStaffEducationOrganizationEmploymentAssociation.id) &&
        Objects.equals(this.employmentStatusDescriptor, edFiStaffEducationOrganizationEmploymentAssociation.employmentStatusDescriptor) &&
        Objects.equals(this.hireDate, edFiStaffEducationOrganizationEmploymentAssociation.hireDate) &&
        Objects.equals(this.credentialReference, edFiStaffEducationOrganizationEmploymentAssociation.credentialReference) &&
        Objects.equals(this.educationOrganizationReference, edFiStaffEducationOrganizationEmploymentAssociation.educationOrganizationReference) &&
        Objects.equals(this.staffReference, edFiStaffEducationOrganizationEmploymentAssociation.staffReference) &&
        Objects.equals(this.department, edFiStaffEducationOrganizationEmploymentAssociation.department) &&
        Objects.equals(this.endDate, edFiStaffEducationOrganizationEmploymentAssociation.endDate) &&
        Objects.equals(this.fullTimeEquivalency, edFiStaffEducationOrganizationEmploymentAssociation.fullTimeEquivalency) &&
        Objects.equals(this.hourlyWage, edFiStaffEducationOrganizationEmploymentAssociation.hourlyWage) &&
        Objects.equals(this.offerDate, edFiStaffEducationOrganizationEmploymentAssociation.offerDate) &&
        Objects.equals(this.separationDescriptor, edFiStaffEducationOrganizationEmploymentAssociation.separationDescriptor) &&
        Objects.equals(this.separationReasonDescriptor, edFiStaffEducationOrganizationEmploymentAssociation.separationReasonDescriptor) &&
        Objects.equals(this.etag, edFiStaffEducationOrganizationEmploymentAssociation.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, employmentStatusDescriptor, hireDate, credentialReference, educationOrganizationReference, staffReference, department, endDate, fullTimeEquivalency, hourlyWage, offerDate, separationDescriptor, separationReasonDescriptor, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStaffEducationOrganizationEmploymentAssociation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employmentStatusDescriptor: ").append(toIndentedString(employmentStatusDescriptor)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    credentialReference: ").append(toIndentedString(credentialReference)).append("\n");
    sb.append("    educationOrganizationReference: ").append(toIndentedString(educationOrganizationReference)).append("\n");
    sb.append("    staffReference: ").append(toIndentedString(staffReference)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    fullTimeEquivalency: ").append(toIndentedString(fullTimeEquivalency)).append("\n");
    sb.append("    hourlyWage: ").append(toIndentedString(hourlyWage)).append("\n");
    sb.append("    offerDate: ").append(toIndentedString(offerDate)).append("\n");
    sb.append("    separationDescriptor: ").append(toIndentedString(separationDescriptor)).append("\n");
    sb.append("    separationReasonDescriptor: ").append(toIndentedString(separationReasonDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

