/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.edfi.model.resource.TpdmApplicantAddressPeriod;


/**
 * TpdmApplicantAddress
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class TpdmApplicantAddress   {
  @SerializedName("addressTypeDescriptor")
  private String addressTypeDescriptor = null;

  @SerializedName("localeDescriptor")
  private String localeDescriptor = null;

  @SerializedName("stateAbbreviationDescriptor")
  private String stateAbbreviationDescriptor = null;

  @SerializedName("apartmentRoomSuiteNumber")
  private String apartmentRoomSuiteNumber = null;

  @SerializedName("buildingSiteNumber")
  private String buildingSiteNumber = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("congressionalDistrict")
  private String congressionalDistrict = null;

  @SerializedName("countyFIPSCode")
  private String countyFIPSCode = null;

  @SerializedName("doNotPublishIndicator")
  private Boolean doNotPublishIndicator = null;

  @SerializedName("latitude")
  private String latitude = null;

  @SerializedName("longitude")
  private String longitude = null;

  @SerializedName("nameOfCounty")
  private String nameOfCounty = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("streetNumberName")
  private String streetNumberName = null;

  @SerializedName("periods")
  private List<TpdmApplicantAddressPeriod> periods = new ArrayList<TpdmApplicantAddressPeriod>();

  public TpdmApplicantAddress addressTypeDescriptor(String addressTypeDescriptor) {
    this.addressTypeDescriptor = addressTypeDescriptor;
    return this;
  }

   /**
   * The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)
   * @return addressTypeDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)")
  public String getAddressTypeDescriptor() {
    return addressTypeDescriptor;
  }

  public void setAddressTypeDescriptor(String addressTypeDescriptor) {
    this.addressTypeDescriptor = addressTypeDescriptor;
  }

  public TpdmApplicantAddress localeDescriptor(String localeDescriptor) {
    this.localeDescriptor = localeDescriptor;
    return this;
  }

   /**
   * A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).
   * @return localeDescriptor
  **/
  @ApiModelProperty(example = "null", value = "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).")
  public String getLocaleDescriptor() {
    return localeDescriptor;
  }

  public void setLocaleDescriptor(String localeDescriptor) {
    this.localeDescriptor = localeDescriptor;
  }

  public TpdmApplicantAddress stateAbbreviationDescriptor(String stateAbbreviationDescriptor) {
    this.stateAbbreviationDescriptor = stateAbbreviationDescriptor;
    return this;
  }

   /**
   * The abbreviation for the state (within the United States) or outlying area in which an address is located.
   * @return stateAbbreviationDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The abbreviation for the state (within the United States) or outlying area in which an address is located.")
  public String getStateAbbreviationDescriptor() {
    return stateAbbreviationDescriptor;
  }

  public void setStateAbbreviationDescriptor(String stateAbbreviationDescriptor) {
    this.stateAbbreviationDescriptor = stateAbbreviationDescriptor;
  }

  public TpdmApplicantAddress apartmentRoomSuiteNumber(String apartmentRoomSuiteNumber) {
    this.apartmentRoomSuiteNumber = apartmentRoomSuiteNumber;
    return this;
  }

   /**
   * The apartment, room, or suite number of an address.
   * @return apartmentRoomSuiteNumber
  **/
  @ApiModelProperty(example = "null", value = "The apartment, room, or suite number of an address.")
  public String getApartmentRoomSuiteNumber() {
    return apartmentRoomSuiteNumber;
  }

  public void setApartmentRoomSuiteNumber(String apartmentRoomSuiteNumber) {
    this.apartmentRoomSuiteNumber = apartmentRoomSuiteNumber;
  }

  public TpdmApplicantAddress buildingSiteNumber(String buildingSiteNumber) {
    this.buildingSiteNumber = buildingSiteNumber;
    return this;
  }

   /**
   * The number of the building on the site, if more than one building shares the same address.
   * @return buildingSiteNumber
  **/
  @ApiModelProperty(example = "null", value = "The number of the building on the site, if more than one building shares the same address.")
  public String getBuildingSiteNumber() {
    return buildingSiteNumber;
  }

  public void setBuildingSiteNumber(String buildingSiteNumber) {
    this.buildingSiteNumber = buildingSiteNumber;
  }

  public TpdmApplicantAddress city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The name of the city in which an address is located.
   * @return city
  **/
  @ApiModelProperty(example = "null", required = true, value = "The name of the city in which an address is located.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public TpdmApplicantAddress congressionalDistrict(String congressionalDistrict) {
    this.congressionalDistrict = congressionalDistrict;
    return this;
  }

   /**
   * The congressional district in which an address is located.
   * @return congressionalDistrict
  **/
  @ApiModelProperty(example = "null", value = "The congressional district in which an address is located.")
  public String getCongressionalDistrict() {
    return congressionalDistrict;
  }

  public void setCongressionalDistrict(String congressionalDistrict) {
    this.congressionalDistrict = congressionalDistrict;
  }

  public TpdmApplicantAddress countyFIPSCode(String countyFIPSCode) {
    this.countyFIPSCode = countyFIPSCode;
    return this;
  }

   /**
   * The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.
   * @return countyFIPSCode
  **/
  @ApiModelProperty(example = "null", value = "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.")
  public String getCountyFIPSCode() {
    return countyFIPSCode;
  }

  public void setCountyFIPSCode(String countyFIPSCode) {
    this.countyFIPSCode = countyFIPSCode;
  }

  public TpdmApplicantAddress doNotPublishIndicator(Boolean doNotPublishIndicator) {
    this.doNotPublishIndicator = doNotPublishIndicator;
    return this;
  }

   /**
   * An indication that the address should not be published.
   * @return doNotPublishIndicator
  **/
  @ApiModelProperty(example = "null", value = "An indication that the address should not be published.")
  public Boolean getDoNotPublishIndicator() {
    return doNotPublishIndicator;
  }

  public void setDoNotPublishIndicator(Boolean doNotPublishIndicator) {
    this.doNotPublishIndicator = doNotPublishIndicator;
  }

  public TpdmApplicantAddress latitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * The geographic latitude of the physical address.
   * @return latitude
  **/
  @ApiModelProperty(example = "null", value = "The geographic latitude of the physical address.")
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }

  public TpdmApplicantAddress longitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * The geographic longitude of the physical address.
   * @return longitude
  **/
  @ApiModelProperty(example = "null", value = "The geographic longitude of the physical address.")
  public String getLongitude() {
    return longitude;
  }

  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }

  public TpdmApplicantAddress nameOfCounty(String nameOfCounty) {
    this.nameOfCounty = nameOfCounty;
    return this;
  }

   /**
   * The name of the county, parish, borough, or comparable unit (within a state) in                        'which an address is located.
   * @return nameOfCounty
  **/
  @ApiModelProperty(example = "null", value = "The name of the county, parish, borough, or comparable unit (within a state) in                        'which an address is located.")
  public String getNameOfCounty() {
    return nameOfCounty;
  }

  public void setNameOfCounty(String nameOfCounty) {
    this.nameOfCounty = nameOfCounty;
  }

  public TpdmApplicantAddress postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The five or nine digit zip code or overseas postal code portion of an address.
   * @return postalCode
  **/
  @ApiModelProperty(example = "null", required = true, value = "The five or nine digit zip code or overseas postal code portion of an address.")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public TpdmApplicantAddress streetNumberName(String streetNumberName) {
    this.streetNumberName = streetNumberName;
    return this;
  }

   /**
   * The street number and street name or post office box number of an address.
   * @return streetNumberName
  **/
  @ApiModelProperty(example = "null", required = true, value = "The street number and street name or post office box number of an address.")
  public String getStreetNumberName() {
    return streetNumberName;
  }

  public void setStreetNumberName(String streetNumberName) {
    this.streetNumberName = streetNumberName;
  }

  public TpdmApplicantAddress periods(List<TpdmApplicantAddressPeriod> periods) {
    this.periods = periods;
    return this;
  }

  public TpdmApplicantAddress addPeriodsItem(TpdmApplicantAddressPeriod periodsItem) {
    this.periods.add(periodsItem);
    return this;
  }

   /**
   * An unordered collection of applicantAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.
   * @return periods
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of applicantAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.")
  public List<TpdmApplicantAddressPeriod> getPeriods() {
    return periods;
  }

  public void setPeriods(List<TpdmApplicantAddressPeriod> periods) {
    this.periods = periods;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmApplicantAddress tpdmApplicantAddress = (TpdmApplicantAddress) o;
    return Objects.equals(this.addressTypeDescriptor, tpdmApplicantAddress.addressTypeDescriptor) &&
        Objects.equals(this.localeDescriptor, tpdmApplicantAddress.localeDescriptor) &&
        Objects.equals(this.stateAbbreviationDescriptor, tpdmApplicantAddress.stateAbbreviationDescriptor) &&
        Objects.equals(this.apartmentRoomSuiteNumber, tpdmApplicantAddress.apartmentRoomSuiteNumber) &&
        Objects.equals(this.buildingSiteNumber, tpdmApplicantAddress.buildingSiteNumber) &&
        Objects.equals(this.city, tpdmApplicantAddress.city) &&
        Objects.equals(this.congressionalDistrict, tpdmApplicantAddress.congressionalDistrict) &&
        Objects.equals(this.countyFIPSCode, tpdmApplicantAddress.countyFIPSCode) &&
        Objects.equals(this.doNotPublishIndicator, tpdmApplicantAddress.doNotPublishIndicator) &&
        Objects.equals(this.latitude, tpdmApplicantAddress.latitude) &&
        Objects.equals(this.longitude, tpdmApplicantAddress.longitude) &&
        Objects.equals(this.nameOfCounty, tpdmApplicantAddress.nameOfCounty) &&
        Objects.equals(this.postalCode, tpdmApplicantAddress.postalCode) &&
        Objects.equals(this.streetNumberName, tpdmApplicantAddress.streetNumberName) &&
        Objects.equals(this.periods, tpdmApplicantAddress.periods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressTypeDescriptor, localeDescriptor, stateAbbreviationDescriptor, apartmentRoomSuiteNumber, buildingSiteNumber, city, congressionalDistrict, countyFIPSCode, doNotPublishIndicator, latitude, longitude, nameOfCounty, postalCode, streetNumberName, periods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmApplicantAddress {\n");
    
    sb.append("    addressTypeDescriptor: ").append(toIndentedString(addressTypeDescriptor)).append("\n");
    sb.append("    localeDescriptor: ").append(toIndentedString(localeDescriptor)).append("\n");
    sb.append("    stateAbbreviationDescriptor: ").append(toIndentedString(stateAbbreviationDescriptor)).append("\n");
    sb.append("    apartmentRoomSuiteNumber: ").append(toIndentedString(apartmentRoomSuiteNumber)).append("\n");
    sb.append("    buildingSiteNumber: ").append(toIndentedString(buildingSiteNumber)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    congressionalDistrict: ").append(toIndentedString(congressionalDistrict)).append("\n");
    sb.append("    countyFIPSCode: ").append(toIndentedString(countyFIPSCode)).append("\n");
    sb.append("    doNotPublishIndicator: ").append(toIndentedString(doNotPublishIndicator)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    nameOfCounty: ").append(toIndentedString(nameOfCounty)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    streetNumberName: ").append(toIndentedString(streetNumberName)).append("\n");
    sb.append("    periods: ").append(toIndentedString(periods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

