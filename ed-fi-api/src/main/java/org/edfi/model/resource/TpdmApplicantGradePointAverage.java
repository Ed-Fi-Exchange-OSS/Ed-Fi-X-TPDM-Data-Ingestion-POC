/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * TpdmApplicantGradePointAverage
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class TpdmApplicantGradePointAverage   {
  @SerializedName("gpaTypeDescriptor")
  private String gpaTypeDescriptor = null;

  @SerializedName("cumulativeGradePointAverage")
  private Double cumulativeGradePointAverage = null;

  @SerializedName("sessionGradePointAverage")
  private Double sessionGradePointAverage = null;

  public TpdmApplicantGradePointAverage gpaTypeDescriptor(String gpaTypeDescriptor) {
    this.gpaTypeDescriptor = gpaTypeDescriptor;
    return this;
  }

   /**
   * The group of courses for which the GPA is provided such as, Pre-Program, Program, High School, Other, or Overall.
   * @return gpaTypeDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The group of courses for which the GPA is provided such as, Pre-Program, Program, High School, Other, or Overall.")
  public String getGpaTypeDescriptor() {
    return gpaTypeDescriptor;
  }

  public void setGpaTypeDescriptor(String gpaTypeDescriptor) {
    this.gpaTypeDescriptor = gpaTypeDescriptor;
  }

  public TpdmApplicantGradePointAverage cumulativeGradePointAverage(Double cumulativeGradePointAverage) {
    this.cumulativeGradePointAverage = cumulativeGradePointAverage;
    return this;
  }

   /**
   * A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.
   * @return cumulativeGradePointAverage
  **/
  @ApiModelProperty(example = "null", value = "A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.")
  public Double getCumulativeGradePointAverage() {
    return cumulativeGradePointAverage;
  }

  public void setCumulativeGradePointAverage(Double cumulativeGradePointAverage) {
    this.cumulativeGradePointAverage = cumulativeGradePointAverage;
  }

  public TpdmApplicantGradePointAverage sessionGradePointAverage(Double sessionGradePointAverage) {
    this.sessionGradePointAverage = sessionGradePointAverage;
    return this;
  }

   /**
   * The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.
   * @return sessionGradePointAverage
  **/
  @ApiModelProperty(example = "null", value = "The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.")
  public Double getSessionGradePointAverage() {
    return sessionGradePointAverage;
  }

  public void setSessionGradePointAverage(Double sessionGradePointAverage) {
    this.sessionGradePointAverage = sessionGradePointAverage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmApplicantGradePointAverage tpdmApplicantGradePointAverage = (TpdmApplicantGradePointAverage) o;
    return Objects.equals(this.gpaTypeDescriptor, tpdmApplicantGradePointAverage.gpaTypeDescriptor) &&
        Objects.equals(this.cumulativeGradePointAverage, tpdmApplicantGradePointAverage.cumulativeGradePointAverage) &&
        Objects.equals(this.sessionGradePointAverage, tpdmApplicantGradePointAverage.sessionGradePointAverage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gpaTypeDescriptor, cumulativeGradePointAverage, sessionGradePointAverage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmApplicantGradePointAverage {\n");
    
    sb.append("    gpaTypeDescriptor: ").append(toIndentedString(gpaTypeDescriptor)).append("\n");
    sb.append("    cumulativeGradePointAverage: ").append(toIndentedString(cumulativeGradePointAverage)).append("\n");
    sb.append("    sessionGradePointAverage: ").append(toIndentedString(sessionGradePointAverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

