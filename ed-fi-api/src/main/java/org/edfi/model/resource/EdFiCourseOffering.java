/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.edfi.model.resource.EdFiCourseOfferingCourseLevelCharacteristic;
import org.edfi.model.resource.EdFiCourseOfferingCurriculumUsed;
import org.edfi.model.resource.EdFiCourseOfferingOfferedGradeLevel;
import org.edfi.model.resource.EdFiCourseReference;
import org.edfi.model.resource.EdFiSchoolReference;
import org.edfi.model.resource.EdFiSessionReference;


/**
 * EdFiCourseOffering
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiCourseOffering   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("localCourseCode")
  private String localCourseCode = null;

  @SerializedName("courseReference")
  private EdFiCourseReference courseReference = null;

  @SerializedName("schoolReference")
  private EdFiSchoolReference schoolReference = null;

  @SerializedName("sessionReference")
  private EdFiSessionReference sessionReference = null;

  @SerializedName("courseLevelCharacteristics")
  private List<EdFiCourseOfferingCourseLevelCharacteristic> courseLevelCharacteristics = new ArrayList<EdFiCourseOfferingCourseLevelCharacteristic>();

  @SerializedName("curriculumUseds")
  private List<EdFiCourseOfferingCurriculumUsed> curriculumUseds = new ArrayList<EdFiCourseOfferingCurriculumUsed>();

  @SerializedName("instructionalTimePlanned")
  private Integer instructionalTimePlanned = null;

  @SerializedName("localCourseTitle")
  private String localCourseTitle = null;

  @SerializedName("offeredGradeLevels")
  private List<EdFiCourseOfferingOfferedGradeLevel> offeredGradeLevels = new ArrayList<EdFiCourseOfferingOfferedGradeLevel>();

  @SerializedName("_etag")
  private String etag = null;

  public EdFiCourseOffering id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiCourseOffering localCourseCode(String localCourseCode) {
    this.localCourseCode = localCourseCode;
    return this;
  }

   /**
   * The local code assigned by the School that identifies the course offering provided for the instruction of students.
   * @return localCourseCode
  **/
  @ApiModelProperty(example = "null", required = true, value = "The local code assigned by the School that identifies the course offering provided for the instruction of students.")
  public String getLocalCourseCode() {
    return localCourseCode;
  }

  public void setLocalCourseCode(String localCourseCode) {
    this.localCourseCode = localCourseCode;
  }

  public EdFiCourseOffering courseReference(EdFiCourseReference courseReference) {
    this.courseReference = courseReference;
    return this;
  }

   /**
   * Get courseReference
   * @return courseReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiCourseReference getCourseReference() {
    return courseReference;
  }

  public void setCourseReference(EdFiCourseReference courseReference) {
    this.courseReference = courseReference;
  }

  public EdFiCourseOffering schoolReference(EdFiSchoolReference schoolReference) {
    this.schoolReference = schoolReference;
    return this;
  }

   /**
   * Get schoolReference
   * @return schoolReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiSchoolReference getSchoolReference() {
    return schoolReference;
  }

  public void setSchoolReference(EdFiSchoolReference schoolReference) {
    this.schoolReference = schoolReference;
  }

  public EdFiCourseOffering sessionReference(EdFiSessionReference sessionReference) {
    this.sessionReference = sessionReference;
    return this;
  }

   /**
   * Get sessionReference
   * @return sessionReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiSessionReference getSessionReference() {
    return sessionReference;
  }

  public void setSessionReference(EdFiSessionReference sessionReference) {
    this.sessionReference = sessionReference;
  }

  public EdFiCourseOffering courseLevelCharacteristics(List<EdFiCourseOfferingCourseLevelCharacteristic> courseLevelCharacteristics) {
    this.courseLevelCharacteristics = courseLevelCharacteristics;
    return this;
  }

  public EdFiCourseOffering addCourseLevelCharacteristicsItem(EdFiCourseOfferingCourseLevelCharacteristic courseLevelCharacteristicsItem) {
    this.courseLevelCharacteristics.add(courseLevelCharacteristicsItem);
    return this;
  }

   /**
   * An unordered collection of courseOfferingCourseLevelCharacteristics. The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course level.
   * @return courseLevelCharacteristics
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of courseOfferingCourseLevelCharacteristics. The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the Course Level Characteristics identified at the Course level.")
  public List<EdFiCourseOfferingCourseLevelCharacteristic> getCourseLevelCharacteristics() {
    return courseLevelCharacteristics;
  }

  public void setCourseLevelCharacteristics(List<EdFiCourseOfferingCourseLevelCharacteristic> courseLevelCharacteristics) {
    this.courseLevelCharacteristics = courseLevelCharacteristics;
  }

  public EdFiCourseOffering curriculumUseds(List<EdFiCourseOfferingCurriculumUsed> curriculumUseds) {
    this.curriculumUseds = curriculumUseds;
    return this;
  }

  public EdFiCourseOffering addCurriculumUsedsItem(EdFiCourseOfferingCurriculumUsed curriculumUsedsItem) {
    this.curriculumUseds.add(curriculumUsedsItem);
    return this;
  }

   /**
   * An unordered collection of courseOfferingCurriculumUseds. The type of curriculum used in an early learning classroom or group.
   * @return curriculumUseds
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of courseOfferingCurriculumUseds. The type of curriculum used in an early learning classroom or group.")
  public List<EdFiCourseOfferingCurriculumUsed> getCurriculumUseds() {
    return curriculumUseds;
  }

  public void setCurriculumUseds(List<EdFiCourseOfferingCurriculumUsed> curriculumUseds) {
    this.curriculumUseds = curriculumUseds;
  }

  public EdFiCourseOffering instructionalTimePlanned(Integer instructionalTimePlanned) {
    this.instructionalTimePlanned = instructionalTimePlanned;
    return this;
  }

   /**
   * The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.
   * @return instructionalTimePlanned
  **/
  @ApiModelProperty(example = "null", value = "The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.")
  public Integer getInstructionalTimePlanned() {
    return instructionalTimePlanned;
  }

  public void setInstructionalTimePlanned(Integer instructionalTimePlanned) {
    this.instructionalTimePlanned = instructionalTimePlanned;
  }

  public EdFiCourseOffering localCourseTitle(String localCourseTitle) {
    this.localCourseTitle = localCourseTitle;
    return this;
  }

   /**
   * The descriptive name given to a course of study offered in the school, if different from the CourseTitle.
   * @return localCourseTitle
  **/
  @ApiModelProperty(example = "null", value = "The descriptive name given to a course of study offered in the school, if different from the CourseTitle.")
  public String getLocalCourseTitle() {
    return localCourseTitle;
  }

  public void setLocalCourseTitle(String localCourseTitle) {
    this.localCourseTitle = localCourseTitle;
  }

  public EdFiCourseOffering offeredGradeLevels(List<EdFiCourseOfferingOfferedGradeLevel> offeredGradeLevels) {
    this.offeredGradeLevels = offeredGradeLevels;
    return this;
  }

  public EdFiCourseOffering addOfferedGradeLevelsItem(EdFiCourseOfferingOfferedGradeLevel offeredGradeLevelsItem) {
    this.offeredGradeLevels.add(offeredGradeLevelsItem);
    return this;
  }

   /**
   * An unordered collection of courseOfferingOfferedGradeLevels. The grade levels in which the course is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course level.
   * @return offeredGradeLevels
  **/
  @ApiModelProperty(example = "null", value = "An unordered collection of courseOfferingOfferedGradeLevels. The grade levels in which the course is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the Course level.")
  public List<EdFiCourseOfferingOfferedGradeLevel> getOfferedGradeLevels() {
    return offeredGradeLevels;
  }

  public void setOfferedGradeLevels(List<EdFiCourseOfferingOfferedGradeLevel> offeredGradeLevels) {
    this.offeredGradeLevels = offeredGradeLevels;
  }

  public EdFiCourseOffering etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiCourseOffering edFiCourseOffering = (EdFiCourseOffering) o;
    return Objects.equals(this.id, edFiCourseOffering.id) &&
        Objects.equals(this.localCourseCode, edFiCourseOffering.localCourseCode) &&
        Objects.equals(this.courseReference, edFiCourseOffering.courseReference) &&
        Objects.equals(this.schoolReference, edFiCourseOffering.schoolReference) &&
        Objects.equals(this.sessionReference, edFiCourseOffering.sessionReference) &&
        Objects.equals(this.courseLevelCharacteristics, edFiCourseOffering.courseLevelCharacteristics) &&
        Objects.equals(this.curriculumUseds, edFiCourseOffering.curriculumUseds) &&
        Objects.equals(this.instructionalTimePlanned, edFiCourseOffering.instructionalTimePlanned) &&
        Objects.equals(this.localCourseTitle, edFiCourseOffering.localCourseTitle) &&
        Objects.equals(this.offeredGradeLevels, edFiCourseOffering.offeredGradeLevels) &&
        Objects.equals(this.etag, edFiCourseOffering.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, localCourseCode, courseReference, schoolReference, sessionReference, courseLevelCharacteristics, curriculumUseds, instructionalTimePlanned, localCourseTitle, offeredGradeLevels, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiCourseOffering {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localCourseCode: ").append(toIndentedString(localCourseCode)).append("\n");
    sb.append("    courseReference: ").append(toIndentedString(courseReference)).append("\n");
    sb.append("    schoolReference: ").append(toIndentedString(schoolReference)).append("\n");
    sb.append("    sessionReference: ").append(toIndentedString(sessionReference)).append("\n");
    sb.append("    courseLevelCharacteristics: ").append(toIndentedString(courseLevelCharacteristics)).append("\n");
    sb.append("    curriculumUseds: ").append(toIndentedString(curriculumUseds)).append("\n");
    sb.append("    instructionalTimePlanned: ").append(toIndentedString(instructionalTimePlanned)).append("\n");
    sb.append("    localCourseTitle: ").append(toIndentedString(localCourseTitle)).append("\n");
    sb.append("    offeredGradeLevels: ").append(toIndentedString(offeredGradeLevels)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

