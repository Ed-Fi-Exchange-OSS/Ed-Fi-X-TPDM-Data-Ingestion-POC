/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.edfi.model.resource.EdFiSchoolReference;


/**
 * EdFiLocation
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiLocation   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("classroomIdentificationCode")
  private String classroomIdentificationCode = null;

  @SerializedName("schoolReference")
  private EdFiSchoolReference schoolReference = null;

  @SerializedName("maximumNumberOfSeats")
  private Integer maximumNumberOfSeats = null;

  @SerializedName("optimalNumberOfSeats")
  private Integer optimalNumberOfSeats = null;

  @SerializedName("_etag")
  private String etag = null;

  public EdFiLocation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiLocation classroomIdentificationCode(String classroomIdentificationCode) {
    this.classroomIdentificationCode = classroomIdentificationCode;
    return this;
  }

   /**
   * A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.
   * @return classroomIdentificationCode
  **/
  @ApiModelProperty(example = "null", required = true, value = "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.")
  public String getClassroomIdentificationCode() {
    return classroomIdentificationCode;
  }

  public void setClassroomIdentificationCode(String classroomIdentificationCode) {
    this.classroomIdentificationCode = classroomIdentificationCode;
  }

  public EdFiLocation schoolReference(EdFiSchoolReference schoolReference) {
    this.schoolReference = schoolReference;
    return this;
  }

   /**
   * Get schoolReference
   * @return schoolReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiSchoolReference getSchoolReference() {
    return schoolReference;
  }

  public void setSchoolReference(EdFiSchoolReference schoolReference) {
    this.schoolReference = schoolReference;
  }

  public EdFiLocation maximumNumberOfSeats(Integer maximumNumberOfSeats) {
    this.maximumNumberOfSeats = maximumNumberOfSeats;
    return this;
  }

   /**
   * The most number of seats the class can maintain.
   * @return maximumNumberOfSeats
  **/
  @ApiModelProperty(example = "null", value = "The most number of seats the class can maintain.")
  public Integer getMaximumNumberOfSeats() {
    return maximumNumberOfSeats;
  }

  public void setMaximumNumberOfSeats(Integer maximumNumberOfSeats) {
    this.maximumNumberOfSeats = maximumNumberOfSeats;
  }

  public EdFiLocation optimalNumberOfSeats(Integer optimalNumberOfSeats) {
    this.optimalNumberOfSeats = optimalNumberOfSeats;
    return this;
  }

   /**
   * The number of seats that is most favorable to the class.
   * @return optimalNumberOfSeats
  **/
  @ApiModelProperty(example = "null", value = "The number of seats that is most favorable to the class.")
  public Integer getOptimalNumberOfSeats() {
    return optimalNumberOfSeats;
  }

  public void setOptimalNumberOfSeats(Integer optimalNumberOfSeats) {
    this.optimalNumberOfSeats = optimalNumberOfSeats;
  }

  public EdFiLocation etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiLocation edFiLocation = (EdFiLocation) o;
    return Objects.equals(this.id, edFiLocation.id) &&
        Objects.equals(this.classroomIdentificationCode, edFiLocation.classroomIdentificationCode) &&
        Objects.equals(this.schoolReference, edFiLocation.schoolReference) &&
        Objects.equals(this.maximumNumberOfSeats, edFiLocation.maximumNumberOfSeats) &&
        Objects.equals(this.optimalNumberOfSeats, edFiLocation.optimalNumberOfSeats) &&
        Objects.equals(this.etag, edFiLocation.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, classroomIdentificationCode, schoolReference, maximumNumberOfSeats, optimalNumberOfSeats, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiLocation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    classroomIdentificationCode: ").append(toIndentedString(classroomIdentificationCode)).append("\n");
    sb.append("    schoolReference: ").append(toIndentedString(schoolReference)).append("\n");
    sb.append("    maximumNumberOfSeats: ").append(toIndentedString(maximumNumberOfSeats)).append("\n");
    sb.append("    optimalNumberOfSeats: ").append(toIndentedString(optimalNumberOfSeats)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

