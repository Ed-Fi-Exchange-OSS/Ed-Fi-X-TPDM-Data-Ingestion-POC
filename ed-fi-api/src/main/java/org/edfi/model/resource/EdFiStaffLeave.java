/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.edfi.model.resource.EdFiStaffReference;
import org.joda.time.LocalDate;


/**
 * EdFiStaffLeave
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiStaffLeave   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("beginDate")
  private LocalDate beginDate = null;

  @SerializedName("staffLeaveEventCategoryDescriptor")
  private String staffLeaveEventCategoryDescriptor = null;

  @SerializedName("staffReference")
  private EdFiStaffReference staffReference = null;

  @SerializedName("endDate")
  private LocalDate endDate = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("substituteAssigned")
  private Boolean substituteAssigned = null;

  @SerializedName("_etag")
  private String etag = null;

  public EdFiStaffLeave id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiStaffLeave beginDate(LocalDate beginDate) {
    this.beginDate = beginDate;
    return this;
  }

   /**
   * The begin date of the staff leave.
   * @return beginDate
  **/
  @ApiModelProperty(example = "null", required = true, value = "The begin date of the staff leave.")
  public LocalDate getBeginDate() {
    return beginDate;
  }

  public void setBeginDate(LocalDate beginDate) {
    this.beginDate = beginDate;
  }

  public EdFiStaffLeave staffLeaveEventCategoryDescriptor(String staffLeaveEventCategoryDescriptor) {
    this.staffLeaveEventCategoryDescriptor = staffLeaveEventCategoryDescriptor;
    return this;
  }

   /**
   * The code describing the type of leave taken, for example:          Sick          Personal          Vacation.
   * @return staffLeaveEventCategoryDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The code describing the type of leave taken, for example:          Sick          Personal          Vacation.")
  public String getStaffLeaveEventCategoryDescriptor() {
    return staffLeaveEventCategoryDescriptor;
  }

  public void setStaffLeaveEventCategoryDescriptor(String staffLeaveEventCategoryDescriptor) {
    this.staffLeaveEventCategoryDescriptor = staffLeaveEventCategoryDescriptor;
  }

  public EdFiStaffLeave staffReference(EdFiStaffReference staffReference) {
    this.staffReference = staffReference;
    return this;
  }

   /**
   * Get staffReference
   * @return staffReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiStaffReference getStaffReference() {
    return staffReference;
  }

  public void setStaffReference(EdFiStaffReference staffReference) {
    this.staffReference = staffReference;
  }

  public EdFiStaffLeave endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * The end date of the staff leave.
   * @return endDate
  **/
  @ApiModelProperty(example = "null", value = "The end date of the staff leave.")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public EdFiStaffLeave reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Expanded reason for the staff leave.
   * @return reason
  **/
  @ApiModelProperty(example = "null", value = "Expanded reason for the staff leave.")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public EdFiStaffLeave substituteAssigned(Boolean substituteAssigned) {
    this.substituteAssigned = substituteAssigned;
    return this;
  }

   /**
   * Indicator of whether a substitute was assigned during the period of staff leave.
   * @return substituteAssigned
  **/
  @ApiModelProperty(example = "null", value = "Indicator of whether a substitute was assigned during the period of staff leave.")
  public Boolean getSubstituteAssigned() {
    return substituteAssigned;
  }

  public void setSubstituteAssigned(Boolean substituteAssigned) {
    this.substituteAssigned = substituteAssigned;
  }

  public EdFiStaffLeave etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiStaffLeave edFiStaffLeave = (EdFiStaffLeave) o;
    return Objects.equals(this.id, edFiStaffLeave.id) &&
        Objects.equals(this.beginDate, edFiStaffLeave.beginDate) &&
        Objects.equals(this.staffLeaveEventCategoryDescriptor, edFiStaffLeave.staffLeaveEventCategoryDescriptor) &&
        Objects.equals(this.staffReference, edFiStaffLeave.staffReference) &&
        Objects.equals(this.endDate, edFiStaffLeave.endDate) &&
        Objects.equals(this.reason, edFiStaffLeave.reason) &&
        Objects.equals(this.substituteAssigned, edFiStaffLeave.substituteAssigned) &&
        Objects.equals(this.etag, edFiStaffLeave.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, beginDate, staffLeaveEventCategoryDescriptor, staffReference, endDate, reason, substituteAssigned, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiStaffLeave {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    beginDate: ").append(toIndentedString(beginDate)).append("\n");
    sb.append("    staffLeaveEventCategoryDescriptor: ").append(toIndentedString(staffLeaveEventCategoryDescriptor)).append("\n");
    sb.append("    staffReference: ").append(toIndentedString(staffReference)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    substituteAssigned: ").append(toIndentedString(substituteAssigned)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

