/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.edfi.model.resource.EdFiGradingPeriodReference;
import org.edfi.model.resource.EdFiStudentSectionAssociationReference;


/**
 * EdFiGrade
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class EdFiGrade   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("gradeTypeDescriptor")
  private String gradeTypeDescriptor = null;

  @SerializedName("gradingPeriodReference")
  private EdFiGradingPeriodReference gradingPeriodReference = null;

  @SerializedName("studentSectionAssociationReference")
  private EdFiStudentSectionAssociationReference studentSectionAssociationReference = null;

  @SerializedName("diagnosticStatement")
  private String diagnosticStatement = null;

  @SerializedName("letterGradeEarned")
  private String letterGradeEarned = null;

  @SerializedName("numericGradeEarned")
  private Double numericGradeEarned = null;

  @SerializedName("performanceBaseConversionDescriptor")
  private String performanceBaseConversionDescriptor = null;

  @SerializedName("_etag")
  private String etag = null;

  public EdFiGrade id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EdFiGrade gradeTypeDescriptor(String gradeTypeDescriptor) {
    this.gradeTypeDescriptor = gradeTypeDescriptor;
    return this;
  }

   /**
   * The type of grade reported (e.g., Exam, Final, Grading Period).
   * @return gradeTypeDescriptor
  **/
  @ApiModelProperty(example = "null", required = true, value = "The type of grade reported (e.g., Exam, Final, Grading Period).")
  public String getGradeTypeDescriptor() {
    return gradeTypeDescriptor;
  }

  public void setGradeTypeDescriptor(String gradeTypeDescriptor) {
    this.gradeTypeDescriptor = gradeTypeDescriptor;
  }

  public EdFiGrade gradingPeriodReference(EdFiGradingPeriodReference gradingPeriodReference) {
    this.gradingPeriodReference = gradingPeriodReference;
    return this;
  }

   /**
   * Get gradingPeriodReference
   * @return gradingPeriodReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiGradingPeriodReference getGradingPeriodReference() {
    return gradingPeriodReference;
  }

  public void setGradingPeriodReference(EdFiGradingPeriodReference gradingPeriodReference) {
    this.gradingPeriodReference = gradingPeriodReference;
  }

  public EdFiGrade studentSectionAssociationReference(EdFiStudentSectionAssociationReference studentSectionAssociationReference) {
    this.studentSectionAssociationReference = studentSectionAssociationReference;
    return this;
  }

   /**
   * Get studentSectionAssociationReference
   * @return studentSectionAssociationReference
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public EdFiStudentSectionAssociationReference getStudentSectionAssociationReference() {
    return studentSectionAssociationReference;
  }

  public void setStudentSectionAssociationReference(EdFiStudentSectionAssociationReference studentSectionAssociationReference) {
    this.studentSectionAssociationReference = studentSectionAssociationReference;
  }

  public EdFiGrade diagnosticStatement(String diagnosticStatement) {
    this.diagnosticStatement = diagnosticStatement;
    return this;
  }

   /**
   * A statement provided by the teacher that provides information in addition to the grade or assessment score.
   * @return diagnosticStatement
  **/
  @ApiModelProperty(example = "null", value = "A statement provided by the teacher that provides information in addition to the grade or assessment score.")
  public String getDiagnosticStatement() {
    return diagnosticStatement;
  }

  public void setDiagnosticStatement(String diagnosticStatement) {
    this.diagnosticStatement = diagnosticStatement;
  }

  public EdFiGrade letterGradeEarned(String letterGradeEarned) {
    this.letterGradeEarned = letterGradeEarned;
    return this;
  }

   /**
   * A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
   * @return letterGradeEarned
  **/
  @ApiModelProperty(example = "null", value = "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.")
  public String getLetterGradeEarned() {
    return letterGradeEarned;
  }

  public void setLetterGradeEarned(String letterGradeEarned) {
    this.letterGradeEarned = letterGradeEarned;
  }

  public EdFiGrade numericGradeEarned(Double numericGradeEarned) {
    this.numericGradeEarned = numericGradeEarned;
    return this;
  }

   /**
   * A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
   * @return numericGradeEarned
  **/
  @ApiModelProperty(example = "null", value = "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.")
  public Double getNumericGradeEarned() {
    return numericGradeEarned;
  }

  public void setNumericGradeEarned(Double numericGradeEarned) {
    this.numericGradeEarned = numericGradeEarned;
  }

  public EdFiGrade performanceBaseConversionDescriptor(String performanceBaseConversionDescriptor) {
    this.performanceBaseConversionDescriptor = performanceBaseConversionDescriptor;
    return this;
  }

   /**
   * A conversion of the level to a standard set of performance levels.
   * @return performanceBaseConversionDescriptor
  **/
  @ApiModelProperty(example = "null", value = "A conversion of the level to a standard set of performance levels.")
  public String getPerformanceBaseConversionDescriptor() {
    return performanceBaseConversionDescriptor;
  }

  public void setPerformanceBaseConversionDescriptor(String performanceBaseConversionDescriptor) {
    this.performanceBaseConversionDescriptor = performanceBaseConversionDescriptor;
  }

  public EdFiGrade etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * A unique system-generated value that identifies the version of the resource.
   * @return etag
  **/
  @ApiModelProperty(example = "null", value = "A unique system-generated value that identifies the version of the resource.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdFiGrade edFiGrade = (EdFiGrade) o;
    return Objects.equals(this.id, edFiGrade.id) &&
        Objects.equals(this.gradeTypeDescriptor, edFiGrade.gradeTypeDescriptor) &&
        Objects.equals(this.gradingPeriodReference, edFiGrade.gradingPeriodReference) &&
        Objects.equals(this.studentSectionAssociationReference, edFiGrade.studentSectionAssociationReference) &&
        Objects.equals(this.diagnosticStatement, edFiGrade.diagnosticStatement) &&
        Objects.equals(this.letterGradeEarned, edFiGrade.letterGradeEarned) &&
        Objects.equals(this.numericGradeEarned, edFiGrade.numericGradeEarned) &&
        Objects.equals(this.performanceBaseConversionDescriptor, edFiGrade.performanceBaseConversionDescriptor) &&
        Objects.equals(this.etag, edFiGrade.etag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, gradeTypeDescriptor, gradingPeriodReference, studentSectionAssociationReference, diagnosticStatement, letterGradeEarned, numericGradeEarned, performanceBaseConversionDescriptor, etag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdFiGrade {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    gradeTypeDescriptor: ").append(toIndentedString(gradeTypeDescriptor)).append("\n");
    sb.append("    gradingPeriodReference: ").append(toIndentedString(gradingPeriodReference)).append("\n");
    sb.append("    studentSectionAssociationReference: ").append(toIndentedString(studentSectionAssociationReference)).append("\n");
    sb.append("    diagnosticStatement: ").append(toIndentedString(diagnosticStatement)).append("\n");
    sb.append("    letterGradeEarned: ").append(toIndentedString(letterGradeEarned)).append("\n");
    sb.append("    numericGradeEarned: ").append(toIndentedString(numericGradeEarned)).append("\n");
    sb.append("    performanceBaseConversionDescriptor: ").append(toIndentedString(performanceBaseConversionDescriptor)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

