/**
 * Ed-Fi Operational Data Store API
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. The Ed-Fi ODS / API supports both transactional and bulk modes of operation.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.edfi.model.resource;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.edfi.model.resource.EdFiSchoolYearTypeReference;


/**
 * TpdmOpenStaffPositionExtension
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-09T12:36:29.493-07:00")
public class TpdmOpenStaffPositionExtension   {
  @SerializedName("fundingSourceDescriptor")
  private String fundingSourceDescriptor = null;

  @SerializedName("openStaffPositionReasonDescriptor")
  private String openStaffPositionReasonDescriptor = null;

  @SerializedName("termDescriptor")
  private String termDescriptor = null;

  @SerializedName("fullTimeEquivalency")
  private Double fullTimeEquivalency = null;

  @SerializedName("highNeedAcademicSubject")
  private Boolean highNeedAcademicSubject = null;

  @SerializedName("isActive")
  private Boolean isActive = null;

  @SerializedName("maxSalary")
  private Double maxSalary = null;

  @SerializedName("minSalary")
  private Double minSalary = null;

  @SerializedName("positionControlNumber")
  private String positionControlNumber = null;

  @SerializedName("totalBudgeted")
  private Double totalBudgeted = null;

  @SerializedName("schoolYearTypeReference")
  private EdFiSchoolYearTypeReference schoolYearTypeReference = null;

  public TpdmOpenStaffPositionExtension fundingSourceDescriptor(String fundingSourceDescriptor) {
    this.fundingSourceDescriptor = fundingSourceDescriptor;
    return this;
  }

   /**
   * The funding source for open staff position.
   * @return fundingSourceDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The funding source for open staff position.")
  public String getFundingSourceDescriptor() {
    return fundingSourceDescriptor;
  }

  public void setFundingSourceDescriptor(String fundingSourceDescriptor) {
    this.fundingSourceDescriptor = fundingSourceDescriptor;
  }

  public TpdmOpenStaffPositionExtension openStaffPositionReasonDescriptor(String openStaffPositionReasonDescriptor) {
    this.openStaffPositionReasonDescriptor = openStaffPositionReasonDescriptor;
    return this;
  }

   /**
   * The reason for the open staff position (e.g., new position, replacement, etc.).
   * @return openStaffPositionReasonDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The reason for the open staff position (e.g., new position, replacement, etc.).")
  public String getOpenStaffPositionReasonDescriptor() {
    return openStaffPositionReasonDescriptor;
  }

  public void setOpenStaffPositionReasonDescriptor(String openStaffPositionReasonDescriptor) {
    this.openStaffPositionReasonDescriptor = openStaffPositionReasonDescriptor;
  }

  public TpdmOpenStaffPositionExtension termDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
    return this;
  }

   /**
   * The first term for the Session during the school year for which the OpenStaffPosition is seeking to fill.
   * @return termDescriptor
  **/
  @ApiModelProperty(example = "null", value = "The first term for the Session during the school year for which the OpenStaffPosition is seeking to fill.")
  public String getTermDescriptor() {
    return termDescriptor;
  }

  public void setTermDescriptor(String termDescriptor) {
    this.termDescriptor = termDescriptor;
  }

  public TpdmOpenStaffPositionExtension fullTimeEquivalency(Double fullTimeEquivalency) {
    this.fullTimeEquivalency = fullTimeEquivalency;
    return this;
  }

   /**
   * The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.
   * @return fullTimeEquivalency
  **/
  @ApiModelProperty(example = "null", value = "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.")
  public Double getFullTimeEquivalency() {
    return fullTimeEquivalency;
  }

  public void setFullTimeEquivalency(Double fullTimeEquivalency) {
    this.fullTimeEquivalency = fullTimeEquivalency;
  }

  public TpdmOpenStaffPositionExtension highNeedAcademicSubject(Boolean highNeedAcademicSubject) {
    this.highNeedAcademicSubject = highNeedAcademicSubject;
    return this;
  }

   /**
   * Indicator as to whether the OpenStaffPosition is filling a high-need subject area designated as a teacher shortage that may be eligible for special grants, aid or compensation.
   * @return highNeedAcademicSubject
  **/
  @ApiModelProperty(example = "null", value = "Indicator as to whether the OpenStaffPosition is filling a high-need subject area designated as a teacher shortage that may be eligible for special grants, aid or compensation.")
  public Boolean getHighNeedAcademicSubject() {
    return highNeedAcademicSubject;
  }

  public void setHighNeedAcademicSubject(Boolean highNeedAcademicSubject) {
    this.highNeedAcademicSubject = highNeedAcademicSubject;
  }

  public TpdmOpenStaffPositionExtension isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Indicator of whether the OpenStaffPosition is currently Active.
   * @return isActive
  **/
  @ApiModelProperty(example = "null", value = "Indicator of whether the OpenStaffPosition is currently Active.")
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public TpdmOpenStaffPositionExtension maxSalary(Double maxSalary) {
    this.maxSalary = maxSalary;
    return this;
  }

   /**
   * The maximum salary or wage a person is paid before deductions (excluding differentials) but including annuities.
   * @return maxSalary
  **/
  @ApiModelProperty(example = "null", value = "The maximum salary or wage a person is paid before deductions (excluding differentials) but including annuities.")
  public Double getMaxSalary() {
    return maxSalary;
  }

  public void setMaxSalary(Double maxSalary) {
    this.maxSalary = maxSalary;
  }

  public TpdmOpenStaffPositionExtension minSalary(Double minSalary) {
    this.minSalary = minSalary;
    return this;
  }

   /**
   * The minimum salary or wage a person is paid before deductions (excluding differentials) but including annuities.
   * @return minSalary
  **/
  @ApiModelProperty(example = "null", value = "The minimum salary or wage a person is paid before deductions (excluding differentials) but including annuities.")
  public Double getMinSalary() {
    return minSalary;
  }

  public void setMinSalary(Double minSalary) {
    this.minSalary = minSalary;
  }

  public TpdmOpenStaffPositionExtension positionControlNumber(String positionControlNumber) {
    this.positionControlNumber = positionControlNumber;
    return this;
  }

   /**
   * Identifier assigned to the position to be filled.
   * @return positionControlNumber
  **/
  @ApiModelProperty(example = "null", value = "Identifier assigned to the position to be filled.")
  public String getPositionControlNumber() {
    return positionControlNumber;
  }

  public void setPositionControlNumber(String positionControlNumber) {
    this.positionControlNumber = positionControlNumber;
  }

  public TpdmOpenStaffPositionExtension totalBudgeted(Double totalBudgeted) {
    this.totalBudgeted = totalBudgeted;
    return this;
  }

   /**
   * Including salary, the fully loaded cost budgeted for this teacher.
   * @return totalBudgeted
  **/
  @ApiModelProperty(example = "null", value = "Including salary, the fully loaded cost budgeted for this teacher.")
  public Double getTotalBudgeted() {
    return totalBudgeted;
  }

  public void setTotalBudgeted(Double totalBudgeted) {
    this.totalBudgeted = totalBudgeted;
  }

  public TpdmOpenStaffPositionExtension schoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    this.schoolYearTypeReference = schoolYearTypeReference;
    return this;
  }

   /**
   * Get schoolYearTypeReference
   * @return schoolYearTypeReference
  **/
  @ApiModelProperty(example = "null", value = "")
  public EdFiSchoolYearTypeReference getSchoolYearTypeReference() {
    return schoolYearTypeReference;
  }

  public void setSchoolYearTypeReference(EdFiSchoolYearTypeReference schoolYearTypeReference) {
    this.schoolYearTypeReference = schoolYearTypeReference;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TpdmOpenStaffPositionExtension tpdmOpenStaffPositionExtension = (TpdmOpenStaffPositionExtension) o;
    return Objects.equals(this.fundingSourceDescriptor, tpdmOpenStaffPositionExtension.fundingSourceDescriptor) &&
        Objects.equals(this.openStaffPositionReasonDescriptor, tpdmOpenStaffPositionExtension.openStaffPositionReasonDescriptor) &&
        Objects.equals(this.termDescriptor, tpdmOpenStaffPositionExtension.termDescriptor) &&
        Objects.equals(this.fullTimeEquivalency, tpdmOpenStaffPositionExtension.fullTimeEquivalency) &&
        Objects.equals(this.highNeedAcademicSubject, tpdmOpenStaffPositionExtension.highNeedAcademicSubject) &&
        Objects.equals(this.isActive, tpdmOpenStaffPositionExtension.isActive) &&
        Objects.equals(this.maxSalary, tpdmOpenStaffPositionExtension.maxSalary) &&
        Objects.equals(this.minSalary, tpdmOpenStaffPositionExtension.minSalary) &&
        Objects.equals(this.positionControlNumber, tpdmOpenStaffPositionExtension.positionControlNumber) &&
        Objects.equals(this.totalBudgeted, tpdmOpenStaffPositionExtension.totalBudgeted) &&
        Objects.equals(this.schoolYearTypeReference, tpdmOpenStaffPositionExtension.schoolYearTypeReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fundingSourceDescriptor, openStaffPositionReasonDescriptor, termDescriptor, fullTimeEquivalency, highNeedAcademicSubject, isActive, maxSalary, minSalary, positionControlNumber, totalBudgeted, schoolYearTypeReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TpdmOpenStaffPositionExtension {\n");
    
    sb.append("    fundingSourceDescriptor: ").append(toIndentedString(fundingSourceDescriptor)).append("\n");
    sb.append("    openStaffPositionReasonDescriptor: ").append(toIndentedString(openStaffPositionReasonDescriptor)).append("\n");
    sb.append("    termDescriptor: ").append(toIndentedString(termDescriptor)).append("\n");
    sb.append("    fullTimeEquivalency: ").append(toIndentedString(fullTimeEquivalency)).append("\n");
    sb.append("    highNeedAcademicSubject: ").append(toIndentedString(highNeedAcademicSubject)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    maxSalary: ").append(toIndentedString(maxSalary)).append("\n");
    sb.append("    minSalary: ").append(toIndentedString(minSalary)).append("\n");
    sb.append("    positionControlNumber: ").append(toIndentedString(positionControlNumber)).append("\n");
    sb.append("    totalBudgeted: ").append(toIndentedString(totalBudgeted)).append("\n");
    sb.append("    schoolYearTypeReference: ").append(toIndentedString(schoolYearTypeReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

